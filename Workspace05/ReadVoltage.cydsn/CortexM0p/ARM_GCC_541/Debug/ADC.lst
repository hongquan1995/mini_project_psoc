ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1920     		movs	r0, #25
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2249     		ldr	r1, .L6
  43 000c 1920     		movs	r0, #25
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 204B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 204B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 1F49     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 1F49     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 204A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 1F4A     		ldr	r2, .L6+24
  68 0030 1F4B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 1F4A     		ldr	r2, .L6+32
  72 0036 204B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 1F4A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 1F4A     		ldr	r2, .L6+44
  80 0042 2049     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2049     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2049     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 6


 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 1E4A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 1E4A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0133     		adds	r3, r3, #1
 100 0060 1D4A     		ldr	r2, .L6+68
 101 0062 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 4
 103 0064 1D49     		ldr	r1, .L6+72
 104 0066 0868     		ldr	r0, [r1]
 105              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 106              		.loc 1 207 0 discriminator 4
 107 0068 1D4A     		ldr	r2, .L6+76
 108 006a 0240     		ands	r2, r0
 109              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 110              		.loc 1 218 0 discriminator 4
 111 006c 1343     		orrs	r3, r2
 112              	.LVL4:
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 113              		.loc 1 226 0 discriminator 4
 114 006e 0B60     		str	r3, [r1]
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 7


 115              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 116              		.loc 1 232 0 discriminator 4
 117 0070 0023     		movs	r3, #0
 118              	.LVL6:
 119 0072 0BE0     		b	.L3
 120              	.LVL7:
 121              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 122              		.loc 1 253 0
 123 0074 9A00     		lsls	r2, r3, #2
 124 0076 1B49     		ldr	r1, .L6+80
 125 0078 5018     		adds	r0, r2, r1
 126 007a 0021     		movs	r1, #0
 127 007c 0160     		str	r1, [r0]
 128              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 8


 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 129              		.loc 1 298 0
 130 007e 5C00     		lsls	r4, r3, #1
 131 0080 1948     		ldr	r0, .L6+84
 132 0082 2152     		strh	r1, [r4, r0]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 133              		.loc 1 311 0
 134 0084 1948     		ldr	r0, .L6+88
 135 0086 1A49     		ldr	r1, .L6+92
 136 0088 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 137              		.loc 1 232 0
 138 008a 0133     		adds	r3, r3, #1
 139              	.LVL9:
 140              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 141              		.loc 1 232 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 9


 142 008c 002B     		cmp	r3, #0
 143 008e F1D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 144              		.loc 1 314 0 is_stmt 1
 145              		@ sp needed
 146 0090 10BD     		pop	{r4, pc}
 147              	.L7:
 148 0092 C046     		.align	2
 149              	.L6:
 150 0094 00000000 		.word	ADC_ISR
 151 0098 20003A40 		.word	1077542944
 152 009c 80033A40 		.word	1077543808
 153 00a0 40021053 		.word	1393558080
 154 00a4 40020053 		.word	1392509504
 155 00a8 00003A40 		.word	1077542912
 156 00ac 8C000080 		.word	-2147483508
 157 00b0 04003A40 		.word	1077542916
 158 00b4 0000FF07 		.word	134152192
 159 00b8 18003A40 		.word	1077542936
 160 00bc 1C003A40 		.word	1077542940
 161 00c0 02000200 		.word	131074
 162 00c4 10003A40 		.word	1077542928
 163 00c8 14003A40 		.word	1077542932
 164 00cc 00033A40 		.word	1077543680
 165 00d0 28023A40 		.word	1077543464
 166 00d4 38023A40 		.word	1077543480
 167 00d8 18023A40 		.word	1077543448
 168 00dc 30003A40 		.word	1077542960
 169 00e0 FFFFFFDF 		.word	-536870913
 170 00e4 80003A40 		.word	1077543040
 171 00e8 00000000 		.word	ADC_offset
 172 00ec AB420000 		.word	17067
 173 00f0 00000000 		.word	ADC_countsPer10Volt
 174              		.cfi_endproc
 175              	.LFE2:
 176              		.size	ADC_Init, .-ADC_Init
 177              		.section	.text.ADC_Enable,"ax",%progbits
 178              		.align	2
 179              		.global	ADC_Enable
 180              		.code	16
 181              		.thumb_func
 182              		.type	ADC_Enable, %function
 183              	ADC_Enable:
 184              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 10


 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 185              		.loc 1 331 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 10B5     		push	{r4, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 193              		.loc 1 332 0
 194 0002 094B     		ldr	r3, .L11
 195 0004 1B68     		ldr	r3, [r3]
 196 0006 002B     		cmp	r3, #0
 197 0008 0CDB     		blt	.L8
 198              	.L10:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 199              		.loc 1 336 0 discriminator 1
 200 000a 084B     		ldr	r3, .L11+4
 201 000c 1B68     		ldr	r3, [r3]
 202 000e 002B     		cmp	r3, #0
 203 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 204              		.loc 1 342 0
 205 0012 054A     		ldr	r2, .L11
 206 0014 1368     		ldr	r3, [r2]
 207 0016 8021     		movs	r1, #128
 208 0018 0906     		lsls	r1, r1, #24
 209 001a 0B43     		orrs	r3, r1
 210 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 211              		.loc 1 345 0
 212 001e 0A20     		movs	r0, #10
 213 0020 FFF7FEFF 		bl	CyDelayUs
 214              	.LVL10:
 215              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 216              		.loc 1 347 0
 217              		@ sp needed
 218 0024 10BD     		pop	{r4, pc}
 219              	.L12:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 11


 220 0026 C046     		.align	2
 221              	.L11:
 222 0028 00003A40 		.word	1077542912
 223 002c 08023A40 		.word	1077543432
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	ADC_Enable, .-ADC_Enable
 227              		.section	.text.ADC_Start,"ax",%progbits
 228              		.align	2
 229              		.global	ADC_Start
 230              		.code	16
 231              		.thumb_func
 232              		.type	ADC_Start, %function
 233              	ADC_Start:
 234              	.LFB1:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 235              		.loc 1 64 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 10B5     		push	{r4, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 243              		.loc 1 66 0
 244 0002 064B     		ldr	r3, .L15
 245 0004 1B78     		ldrb	r3, [r3]
 246 0006 002B     		cmp	r3, #0
 247 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 248              		.loc 1 68 0
 249 000a FFF7FEFF 		bl	ADC_Init
 250              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 251              		.loc 1 69 0
 252 000e 0122     		movs	r2, #1
 253 0010 024B     		ldr	r3, .L15
 254 0012 1A70     		strb	r2, [r3]
 255              	.L14:
  71:Generated_Source\PSoC4/ADC.c **** }
 256              		.loc 1 71 0
 257 0014 FFF7FEFF 		bl	ADC_Enable
 258              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 259              		.loc 1 72 0
 260              		@ sp needed
 261 0018 10BD     		pop	{r4, pc}
 262              	.L16:
 263 001a C046     		.align	2
 264              	.L15:
 265 001c 00000000 		.word	.LANCHOR0
 266              		.cfi_endproc
 267              	.LFE1:
 268              		.size	ADC_Start, .-ADC_Start
 269              		.section	.text.ADC_Stop,"ax",%progbits
 270              		.align	2
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 12


 271              		.global	ADC_Stop
 272              		.code	16
 273              		.thumb_func
 274              		.type	ADC_Stop, %function
 275              	ADC_Stop:
 276              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 277              		.loc 1 366 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 282              		.loc 1 367 0
 283 0000 024A     		ldr	r2, .L18
 284 0002 1368     		ldr	r3, [r2]
 285 0004 5B00     		lsls	r3, r3, #1
 286 0006 5B08     		lsrs	r3, r3, #1
 287 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 288              		.loc 1 368 0
 289              		@ sp needed
 290 000a 7047     		bx	lr
 291              	.L19:
 292              		.align	2
 293              	.L18:
 294 000c 00003A40 		.word	1077542912
 295              		.cfi_endproc
 296              	.LFE4:
 297              		.size	ADC_Stop, .-ADC_Stop
 298              		.section	.text.ADC_StartConvert,"ax",%progbits
 299              		.align	2
 300              		.global	ADC_StartConvert
 301              		.code	16
 302              		.thumb_func
 303              		.type	ADC_StartConvert, %function
 304              	ADC_StartConvert:
 305              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 13


 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 306              		.loc 1 392 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 311              		.loc 1 394 0
 312 0000 034A     		ldr	r2, .L21
 313 0002 1368     		ldr	r3, [r2]
 314 0004 8021     		movs	r1, #128
 315 0006 4902     		lsls	r1, r1, #9
 316 0008 0B43     		orrs	r3, r1
 317 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 318              		.loc 1 399 0
 319              		@ sp needed
 320 000c 7047     		bx	lr
 321              	.L22:
 322 000e C046     		.align	2
 323              	.L21:
 324 0010 04003A40 		.word	1077542916
 325              		.cfi_endproc
 326              	.LFE5:
 327              		.size	ADC_StartConvert, .-ADC_StartConvert
 328              		.section	.text.ADC_StopConvert,"ax",%progbits
 329              		.align	2
 330              		.global	ADC_StopConvert
 331              		.code	16
 332              		.thumb_func
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 14


 333              		.type	ADC_StopConvert, %function
 334              	ADC_StopConvert:
 335              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 336              		.loc 1 417 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 341              		.loc 1 419 0
 342 0000 024A     		ldr	r2, .L24
 343 0002 1168     		ldr	r1, [r2]
 344 0004 024B     		ldr	r3, .L24+4
 345 0006 0B40     		ands	r3, r1
 346 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 347              		.loc 1 421 0
 348              		@ sp needed
 349 000a 7047     		bx	lr
 350              	.L25:
 351              		.align	2
 352              	.L24:
 353 000c 04003A40 		.word	1077542916
 354 0010 FFFFFEFF 		.word	-65537
 355              		.cfi_endproc
 356              	.LFE6:
 357              		.size	ADC_StopConvert, .-ADC_StopConvert
 358              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 359              		.align	2
 360              		.global	ADC_IsEndConversion
 361              		.code	16
 362              		.thumb_func
 363              		.type	ADC_IsEndConversion, %function
 364              	ADC_IsEndConversion:
 365              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 15


 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 366              		.loc 1 451 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL13:
 372 0000 0200     		movs	r2, r0
 373              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 374              		.loc 1 454 0
 375 0002 8307     		lsls	r3, r0, #30
 376 0004 0CD0     		beq	.L30
 377              	.LVL15:
 378              	.L29:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 379              		.loc 1 458 0 discriminator 2
 380 0006 074B     		ldr	r3, .L31
 381 0008 1B68     		ldr	r3, [r3]
 382 000a 0120     		movs	r0, #1
 383 000c 1840     		ands	r0, r3
 384              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 385              		.loc 1 459 0 discriminator 2
 386 000e 01D1     		bne	.L28
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 16


 387              		.loc 1 459 0 is_stmt 0 discriminator 1
 388 0010 9307     		lsls	r3, r2, #30
 389 0012 F8D4     		bmi	.L29
 390              	.L28:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 391              		.loc 1 461 0 is_stmt 1
 392 0014 0028     		cmp	r0, #0
 393 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 394              		.loc 1 464 0
 395 0018 0122     		movs	r2, #1
 396              	.LVL17:
 397 001a 024B     		ldr	r3, .L31
 398 001c 1A60     		str	r2, [r3]
 399 001e 00E0     		b	.L27
 400              	.LVL18:
 401              	.L30:
 452:Generated_Source\PSoC4/ADC.c **** 
 402              		.loc 1 452 0
 403 0020 0020     		movs	r0, #0
 404              	.LVL19:
 405              	.L27:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 406              		.loc 1 486 0
 407              		@ sp needed
 408 0022 7047     		bx	lr
 409              	.L32:
 410              		.align	2
 411              	.L31:
 412 0024 10023A40 		.word	1077543440
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 17


 416              		.section	.text.ADC_GetResult16,"ax",%progbits
 417              		.align	2
 418              		.global	ADC_GetResult16
 419              		.code	16
 420              		.thumb_func
 421              		.type	ADC_GetResult16, %function
 422              	ADC_GetResult16:
 423              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 424              		.loc 1 505 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL20:
 429 0000 10B5     		push	{r4, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
 433 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 434              		.loc 1 509 0
 435 0004 02D0     		beq	.L34
 436              		.loc 1 509 0 is_stmt 0 discriminator 1
 437 0006 0020     		movs	r0, #0
 438              	.LVL21:
 439 0008 FFF7FEFF 		bl	CyHalt
 440              	.LVL22:
 441              	.L34:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 442              		.loc 1 511 0 is_stmt 1
 443 000c 002C     		cmp	r4, #0
 444 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 445              		.loc 1 513 0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 18


 446 0010 A400     		lsls	r4, r4, #2
 447              	.LVL23:
 448 0012 054B     		ldr	r3, .L37
 449 0014 9C46     		mov	ip, r3
 450 0016 6444     		add	r4, r4, ip
 451 0018 2068     		ldr	r0, [r4]
 452 001a 0004     		lsls	r0, r0, #16
 453 001c 000C     		lsrs	r0, r0, #16
 454              	.LVL24:
 455 001e 00E0     		b	.L35
 456              	.LVL25:
 457              	.L36:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 458              		.loc 1 521 0
 459 0020 0020     		movs	r0, #0
 460              	.LVL26:
 461              	.L35:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 462              		.loc 1 525 0
 463 0022 00B2     		sxth	r0, r0
 464              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 465              		.loc 1 526 0
 466              		@ sp needed
 467 0024 10BD     		pop	{r4, pc}
 468              	.L38:
 469 0026 C046     		.align	2
 470              	.L37:
 471 0028 80013A40 		.word	1077543296
 472              		.cfi_endproc
 473              	.LFE8:
 474              		.size	ADC_GetResult16, .-ADC_GetResult16
 475              		.section	.text.ADC_SetChanMask,"ax",%progbits
 476              		.align	2
 477              		.global	ADC_SetChanMask
 478              		.code	16
 479              		.thumb_func
 480              		.type	ADC_SetChanMask, %function
 481              	ADC_SetChanMask:
 482              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 19


 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 483              		.loc 1 550 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 489              		.loc 1 551 0
 490 0000 0123     		movs	r3, #1
 491 0002 1840     		ands	r0, r3
 492              	.LVL29:
 493 0004 014B     		ldr	r3, .L40
 494 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 495              		.loc 1 552 0
 496              		@ sp needed
 497 0008 7047     		bx	lr
 498              	.L41:
 499 000a C046     		.align	2
 500              	.L40:
 501 000c 20003A40 		.word	1077542944
 502              		.cfi_endproc
 503              	.LFE9:
 504              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 505              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 506              		.align	2
 507              		.global	ADC_SetLowLimit
 508              		.code	16
 509              		.thumb_func
 510              		.type	ADC_SetLowLimit, %function
 511              	ADC_SetLowLimit:
 512              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 20


 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 513              		.loc 1 594 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 519              		.loc 1 595 0
 520 0000 054A     		ldr	r2, .L43
 521 0002 1368     		ldr	r3, [r2]
 522 0004 1B0C     		lsrs	r3, r3, #16
 523 0006 1B04     		lsls	r3, r3, #16
 524 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 525              		.loc 1 596 0
 526 000a 1368     		ldr	r3, [r2]
 527 000c 0004     		lsls	r0, r0, #16
 528              	.LVL31:
 529 000e 000C     		lsrs	r0, r0, #16
 530 0010 1843     		orrs	r0, r3
 531 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 532              		.loc 1 597 0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 21


 533              		@ sp needed
 534 0014 7047     		bx	lr
 535              	.L44:
 536 0016 C046     		.align	2
 537              	.L43:
 538 0018 18003A40 		.word	1077542936
 539              		.cfi_endproc
 540              	.LFE10:
 541              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 542              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 543              		.align	2
 544              		.global	ADC_SetHighLimit
 545              		.code	16
 546              		.thumb_func
 547              		.type	ADC_SetHighLimit, %function
 548              	ADC_SetHighLimit:
 549              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 550              		.loc 1 615 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 556              		.loc 1 616 0
 557 0000 044A     		ldr	r2, .L46
 558 0002 1368     		ldr	r3, [r2]
 559 0004 1B04     		lsls	r3, r3, #16
 560 0006 1B0C     		lsrs	r3, r3, #16
 561 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 562              		.loc 1 617 0
 563 000a 1368     		ldr	r3, [r2]
 564 000c 0004     		lsls	r0, r0, #16
 565              	.LVL33:
 566 000e 1843     		orrs	r0, r3
 567 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 568              		.loc 1 618 0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 22


 569              		@ sp needed
 570 0012 7047     		bx	lr
 571              	.L47:
 572              		.align	2
 573              	.L46:
 574 0014 18003A40 		.word	1077542936
 575              		.cfi_endproc
 576              	.LFE11:
 577              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 578              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 579              		.align	2
 580              		.global	ADC_SetLimitMask
 581              		.code	16
 582              		.thumb_func
 583              		.type	ADC_SetLimitMask, %function
 584              	ADC_SetLimitMask:
 585              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 586              		.loc 1 639 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 592              		.loc 1 640 0
 593 0000 0123     		movs	r3, #1
 594 0002 1840     		ands	r0, r3
 595              	.LVL35:
 596 0004 014B     		ldr	r3, .L49
 597 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 598              		.loc 1 641 0
 599              		@ sp needed
 600 0008 7047     		bx	lr
 601              	.L50:
 602 000a C046     		.align	2
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 23


 603              	.L49:
 604 000c 38023A40 		.word	1077543480
 605              		.cfi_endproc
 606              	.LFE12:
 607              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 608              		.section	.text.ADC_SetSatMask,"ax",%progbits
 609              		.align	2
 610              		.global	ADC_SetSatMask
 611              		.code	16
 612              		.thumb_func
 613              		.type	ADC_SetSatMask, %function
 614              	ADC_SetSatMask:
 615              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 616              		.loc 1 662 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 622              		.loc 1 663 0
 623 0000 0123     		movs	r3, #1
 624 0002 1840     		ands	r0, r3
 625              	.LVL37:
 626 0004 014B     		ldr	r3, .L52
 627 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 628              		.loc 1 664 0
 629              		@ sp needed
 630 0008 7047     		bx	lr
 631              	.L53:
 632 000a C046     		.align	2
 633              	.L52:
 634 000c 28023A40 		.word	1077543464
 635              		.cfi_endproc
 636              	.LFE13:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 24


 637              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 638              		.section	.text.ADC_SetOffset,"ax",%progbits
 639              		.align	2
 640              		.global	ADC_SetOffset
 641              		.code	16
 642              		.thumb_func
 643              		.type	ADC_SetOffset, %function
 644              	ADC_SetOffset:
 645              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 646              		.loc 1 690 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL38:
 651 0000 70B5     		push	{r4, r5, r6, lr}
 652              		.cfi_def_cfa_offset 16
 653              		.cfi_offset 4, -16
 654              		.cfi_offset 5, -12
 655              		.cfi_offset 6, -8
 656              		.cfi_offset 14, -4
 657 0002 0400     		movs	r4, r0
 658 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 659              		.loc 1 692 0
 660 0006 0028     		cmp	r0, #0
 661 0008 02D0     		beq	.L55
 662              		.loc 1 692 0 is_stmt 0 discriminator 1
 663 000a 0020     		movs	r0, #0
 664              	.LVL39:
 665 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 25


 666              	.LVL40:
 667              	.L55:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 668              		.loc 1 694 0 is_stmt 1
 669 0010 6400     		lsls	r4, r4, #1
 670              	.LVL41:
 671 0012 014B     		ldr	r3, .L56
 672 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 673              		.loc 1 695 0
 674              		@ sp needed
 675 0016 70BD     		pop	{r4, r5, r6, pc}
 676              	.L57:
 677              		.align	2
 678              	.L56:
 679 0018 00000000 		.word	ADC_offset
 680              		.cfi_endproc
 681              	.LFE14:
 682              		.size	ADC_SetOffset, .-ADC_SetOffset
 683              		.section	.text.ADC_SetGain,"ax",%progbits
 684              		.align	2
 685              		.global	ADC_SetGain
 686              		.code	16
 687              		.thumb_func
 688              		.type	ADC_SetGain, %function
 689              	ADC_SetGain:
 690              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 26


 691              		.loc 1 724 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              	.LVL42:
 696 0000 70B5     		push	{r4, r5, r6, lr}
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 4, -16
 699              		.cfi_offset 5, -12
 700              		.cfi_offset 6, -8
 701              		.cfi_offset 14, -4
 702 0002 0400     		movs	r4, r0
 703 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 704              		.loc 1 726 0
 705 0006 0028     		cmp	r0, #0
 706 0008 02D0     		beq	.L59
 707              		.loc 1 726 0 is_stmt 0 discriminator 1
 708 000a 0020     		movs	r0, #0
 709              	.LVL43:
 710 000c FFF7FEFF 		bl	CyHalt
 711              	.LVL44:
 712              	.L59:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 713              		.loc 1 728 0 is_stmt 1
 714 0010 A400     		lsls	r4, r4, #2
 715              	.LVL45:
 716 0012 014B     		ldr	r3, .L60
 717 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 718              		.loc 1 729 0
 719              		@ sp needed
 720              	.LVL46:
 721 0016 70BD     		pop	{r4, r5, r6, pc}
 722              	.L61:
 723              		.align	2
 724              	.L60:
 725 0018 00000000 		.word	ADC_countsPer10Volt
 726              		.cfi_endproc
 727              	.LFE15:
 728              		.size	ADC_SetGain, .-ADC_SetGain
 729              		.global	__aeabi_idiv
 730              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 731              		.align	2
 732              		.global	ADC_CountsTo_mVolts
 733              		.code	16
 734              		.thumb_func
 735              		.type	ADC_CountsTo_mVolts, %function
 736              	ADC_CountsTo_mVolts:
 737              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 27


 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 738              		.loc 1 757 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL47:
 743 0000 70B5     		push	{r4, r5, r6, lr}
 744              		.cfi_def_cfa_offset 16
 745              		.cfi_offset 4, -16
 746              		.cfi_offset 5, -12
 747              		.cfi_offset 6, -8
 748              		.cfi_offset 14, -4
 749 0002 0400     		movs	r4, r0
 750 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 751              		.loc 1 761 0
 752 0006 0028     		cmp	r0, #0
 753 0008 02D0     		beq	.L63
 754              		.loc 1 761 0 is_stmt 0 discriminator 1
 755 000a 0020     		movs	r0, #0
 756              	.LVL48:
 757 000c FFF7FEFF 		bl	CyHalt
 758              	.LVL49:
 759              	.L63:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 28


 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 760              		.loc 1 772 0 is_stmt 1
 761 0010 6300     		lsls	r3, r4, #1
 762 0012 0F4A     		ldr	r2, .L66
 763 0014 995A     		ldrh	r1, [r3, r2]
 764 0016 09B2     		sxth	r1, r1
 765 0018 691A     		subs	r1, r5, r1
 766 001a 09B2     		sxth	r1, r1
 767              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 768              		.loc 1 774 0
 769 001c 0D48     		ldr	r0, .L66+4
 770 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 771              		.loc 1 775 0
 772 0020 0029     		cmp	r1, #0
 773 0022 06DD     		ble	.L64
 774              		.loc 1 775 0 is_stmt 0 discriminator 1
 775 0024 A300     		lsls	r3, r4, #2
 776 0026 0C4A     		ldr	r2, .L66+8
 777 0028 9A58     		ldr	r2, [r3, r2]
 778 002a D30F     		lsrs	r3, r2, #31
 779 002c 9A18     		adds	r2, r3, r2
 780 002e 5310     		asrs	r3, r2, #1
 781 0030 06E0     		b	.L65
 782              	.L64:
 783              		.loc 1 775 0 discriminator 2
 784 0032 A300     		lsls	r3, r4, #2
 785 0034 084A     		ldr	r2, .L66+8
 786 0036 9A58     		ldr	r2, [r3, r2]
 787 0038 D30F     		lsrs	r3, r2, #31
 788 003a 9A18     		adds	r2, r3, r2
 789 003c 5210     		asrs	r2, r2, #1
 790 003e 5342     		rsbs	r3, r2, #0
 791              	.L65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 792              		.loc 1 774 0 is_stmt 1
 793 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 794              		.loc 1 776 0
 795 0042 A400     		lsls	r4, r4, #2
 796              	.LVL51:
 797 0044 044B     		ldr	r3, .L66+8
 798 0046 E158     		ldr	r1, [r4, r3]
 799              	.LVL52:
 800 0048 FFF7FEFF 		bl	__aeabi_idiv
 801              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 802              		.loc 1 774 0
 803 004c 00B2     		sxth	r0, r0
 804              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 29


 805              		.loc 1 779 0
 806              		@ sp needed
 807 004e 70BD     		pop	{r4, r5, r6, pc}
 808              	.L67:
 809              		.align	2
 810              	.L66:
 811 0050 00000000 		.word	ADC_offset
 812 0054 10270000 		.word	10000
 813 0058 00000000 		.word	ADC_countsPer10Volt
 814              		.cfi_endproc
 815              	.LFE16:
 816              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 817              		.global	__aeabi_lmul
 818              		.global	__aeabi_ldivmod
 819              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 820              		.align	2
 821              		.global	ADC_CountsTo_uVolts
 822              		.code	16
 823              		.thumb_func
 824              		.type	ADC_CountsTo_uVolts, %function
 825              	ADC_CountsTo_uVolts:
 826              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 827              		.loc 1 811 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 30


 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL55:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
 838 0002 0500     		movs	r5, r0
 839 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 840              		.loc 1 815 0
 841 0006 0028     		cmp	r0, #0
 842 0008 02D0     		beq	.L69
 843              		.loc 1 815 0 is_stmt 0 discriminator 1
 844 000a 0020     		movs	r0, #0
 845              	.LVL56:
 846 000c FFF7FEFF 		bl	CyHalt
 847              	.LVL57:
 848              	.L69:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 849              		.loc 1 826 0 is_stmt 1
 850 0010 6A00     		lsls	r2, r5, #1
 851 0012 084B     		ldr	r3, .L70
 852 0014 D05A     		ldrh	r0, [r2, r3]
 853 0016 00B2     		sxth	r0, r0
 854 0018 201A     		subs	r0, r4, r0
 855 001a 00B2     		sxth	r0, r0
 856              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 857              		.loc 1 828 0
 858 001c C117     		asrs	r1, r0, #31
 859 001e 064A     		ldr	r2, .L70+4
 860 0020 0023     		movs	r3, #0
 861 0022 FFF7FEFF 		bl	__aeabi_lmul
 862              	.LVL59:
 863 0026 AD00     		lsls	r5, r5, #2
 864              	.LVL60:
 865 0028 044B     		ldr	r3, .L70+8
 866 002a EA58     		ldr	r2, [r5, r3]
 867 002c D317     		asrs	r3, r2, #31
 868 002e FFF7FEFF 		bl	__aeabi_ldivmod
 869              	.LVL61:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 31


 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 870              		.loc 1 831 0
 871              		@ sp needed
 872 0032 70BD     		pop	{r4, r5, r6, pc}
 873              	.L71:
 874              		.align	2
 875              	.L70:
 876 0034 00000000 		.word	ADC_offset
 877 0038 80969800 		.word	10000000
 878 003c 00000000 		.word	ADC_countsPer10Volt
 879              		.cfi_endproc
 880              	.LFE17:
 881              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 882              		.global	__aeabi_i2f
 883              		.global	__aeabi_fmul
 884              		.global	__aeabi_fdiv
 885              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 886              		.align	2
 887              		.global	ADC_CountsTo_Volts
 888              		.code	16
 889              		.thumb_func
 890              		.type	ADC_CountsTo_Volts, %function
 891              	ADC_CountsTo_Volts:
 892              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 893              		.loc 1 856 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              	.LVL62:
 898 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 32


 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 4, -16
 901              		.cfi_offset 5, -12
 902              		.cfi_offset 6, -8
 903              		.cfi_offset 14, -4
 904 0002 0400     		movs	r4, r0
 905 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 906              		.loc 1 860 0
 907 0006 0028     		cmp	r0, #0
 908 0008 02D0     		beq	.L73
 909              		.loc 1 860 0 is_stmt 0 discriminator 1
 910 000a 0020     		movs	r0, #0
 911              	.LVL63:
 912 000c FFF7FEFF 		bl	CyHalt
 913              	.LVL64:
 914              	.L73:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 915              		.loc 1 871 0 is_stmt 1
 916 0010 6200     		lsls	r2, r4, #1
 917 0012 0A4B     		ldr	r3, .L74
 918 0014 D05A     		ldrh	r0, [r2, r3]
 919 0016 00B2     		sxth	r0, r0
 920 0018 281A     		subs	r0, r5, r0
 921 001a 00B2     		sxth	r0, r0
 922              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 923              		.loc 1 873 0
 924 001c FFF7FEFF 		bl	__aeabi_i2f
 925              	.LVL66:
 926 0020 0749     		ldr	r1, .L74+4
 927 0022 FFF7FEFF 		bl	__aeabi_fmul
 928              	.LVL67:
 929 0026 051C     		adds	r5, r0, #0
 930 0028 A400     		lsls	r4, r4, #2
 931              	.LVL68:
 932 002a 064B     		ldr	r3, .L74+8
 933 002c E058     		ldr	r0, [r4, r3]
 934 002e FFF7FEFF 		bl	__aeabi_i2f
 935              	.LVL69:
 936 0032 011C     		adds	r1, r0, #0
 937 0034 281C     		adds	r0, r5, #0
 938 0036 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 33


 939              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 940              		.loc 1 876 0
 941              		@ sp needed
 942 003a 70BD     		pop	{r4, r5, r6, pc}
 943              	.L75:
 944              		.align	2
 945              	.L74:
 946 003c 00000000 		.word	ADC_offset
 947 0040 00002041 		.word	1092616192
 948 0044 00000000 		.word	ADC_countsPer10Volt
 949              		.cfi_endproc
 950              	.LFE18:
 951              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 952              		.comm	ADC_countsPer10Volt,4,4
 953              		.comm	ADC_offset,2,4
 954              		.global	ADC_initVar
 955              		.bss
 956              		.set	.LANCHOR0,. + 0
 957              		.type	ADC_initVar, %object
 958              		.size	ADC_initVar, 1
 959              	ADC_initVar:
 960 0000 00       		.space	1
 961              		.text
 962              	.Letext0:
 963              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 964              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 965              		.section	.debug_info,"",%progbits
 966              	.Ldebug_info0:
 967 0000 75050000 		.4byte	0x575
 968 0004 0400     		.2byte	0x4
 969 0006 00000000 		.4byte	.Ldebug_abbrev0
 970 000a 04       		.byte	0x4
 971 000b 01       		.uleb128 0x1
 972 000c 90020000 		.4byte	.LASF63
 973 0010 0C       		.byte	0xc
 974 0011 FA010000 		.4byte	.LASF64
 975 0015 6F030000 		.4byte	.LASF65
 976 0019 00000000 		.4byte	.Ldebug_ranges0+0
 977 001d 00000000 		.4byte	0
 978 0021 00000000 		.4byte	.Ldebug_line0
 979 0025 02       		.uleb128 0x2
 980 0026 01       		.byte	0x1
 981 0027 06       		.byte	0x6
 982 0028 68000000 		.4byte	.LASF0
 983 002c 02       		.uleb128 0x2
 984 002d 01       		.byte	0x1
 985 002e 08       		.byte	0x8
 986 002f 5E020000 		.4byte	.LASF1
 987 0033 02       		.uleb128 0x2
 988 0034 02       		.byte	0x2
 989 0035 05       		.byte	0x5
 990 0036 77020000 		.4byte	.LASF2
 991 003a 02       		.uleb128 0x2
 992 003b 02       		.byte	0x2
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 34


 993 003c 07       		.byte	0x7
 994 003d 49010000 		.4byte	.LASF3
 995 0041 02       		.uleb128 0x2
 996 0042 04       		.byte	0x4
 997 0043 05       		.byte	0x5
 998 0044 8B000000 		.4byte	.LASF4
 999 0048 02       		.uleb128 0x2
 1000 0049 04       		.byte	0x4
 1001 004a 07       		.byte	0x7
 1002 004b 18010000 		.4byte	.LASF5
 1003 004f 02       		.uleb128 0x2
 1004 0050 08       		.byte	0x8
 1005 0051 05       		.byte	0x5
 1006 0052 5A000000 		.4byte	.LASF6
 1007 0056 02       		.uleb128 0x2
 1008 0057 08       		.byte	0x8
 1009 0058 07       		.byte	0x7
 1010 0059 32000000 		.4byte	.LASF7
 1011 005d 03       		.uleb128 0x3
 1012 005e 04       		.byte	0x4
 1013 005f 05       		.byte	0x5
 1014 0060 696E7400 		.ascii	"int\000"
 1015 0064 02       		.uleb128 0x2
 1016 0065 04       		.byte	0x4
 1017 0066 07       		.byte	0x7
 1018 0067 04010000 		.4byte	.LASF8
 1019 006b 04       		.uleb128 0x4
 1020 006c BC000000 		.4byte	.LASF9
 1021 0070 02       		.byte	0x2
 1022 0071 E601     		.2byte	0x1e6
 1023 0073 2C000000 		.4byte	0x2c
 1024 0077 04       		.uleb128 0x4
 1025 0078 00000000 		.4byte	.LASF10
 1026 007c 02       		.byte	0x2
 1027 007d E701     		.2byte	0x1e7
 1028 007f 3A000000 		.4byte	0x3a
 1029 0083 04       		.uleb128 0x4
 1030 0084 D3000000 		.4byte	.LASF11
 1031 0088 02       		.byte	0x2
 1032 0089 E801     		.2byte	0x1e8
 1033 008b 48000000 		.4byte	0x48
 1034 008f 04       		.uleb128 0x4
 1035 0090 5B030000 		.4byte	.LASF12
 1036 0094 02       		.byte	0x2
 1037 0095 EA01     		.2byte	0x1ea
 1038 0097 33000000 		.4byte	0x33
 1039 009b 04       		.uleb128 0x4
 1040 009c 7B000000 		.4byte	.LASF13
 1041 00a0 02       		.byte	0x2
 1042 00a1 EB01     		.2byte	0x1eb
 1043 00a3 41000000 		.4byte	0x41
 1044 00a7 04       		.uleb128 0x4
 1045 00a8 88010000 		.4byte	.LASF14
 1046 00ac 02       		.byte	0x2
 1047 00ad EC01     		.2byte	0x1ec
 1048 00af B3000000 		.4byte	0xb3
 1049 00b3 02       		.uleb128 0x2
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 35


 1050 00b4 04       		.byte	0x4
 1051 00b5 04       		.byte	0x4
 1052 00b6 23020000 		.4byte	.LASF15
 1053 00ba 02       		.uleb128 0x2
 1054 00bb 08       		.byte	0x8
 1055 00bc 04       		.byte	0x4
 1056 00bd CC000000 		.4byte	.LASF16
 1057 00c1 04       		.uleb128 0x4
 1058 00c2 D3010000 		.4byte	.LASF17
 1059 00c6 02       		.byte	0x2
 1060 00c7 F101     		.2byte	0x1f1
 1061 00c9 4F000000 		.4byte	0x4f
 1062 00cd 02       		.uleb128 0x2
 1063 00ce 01       		.byte	0x1
 1064 00cf 08       		.byte	0x8
 1065 00d0 27030000 		.4byte	.LASF18
 1066 00d4 04       		.uleb128 0x4
 1067 00d5 82010000 		.4byte	.LASF19
 1068 00d9 02       		.byte	0x2
 1069 00da 9202     		.2byte	0x292
 1070 00dc E0000000 		.4byte	0xe0
 1071 00e0 05       		.uleb128 0x5
 1072 00e1 83000000 		.4byte	0x83
 1073 00e5 02       		.uleb128 0x2
 1074 00e6 08       		.byte	0x8
 1075 00e7 04       		.byte	0x4
 1076 00e8 A2010000 		.4byte	.LASF20
 1077 00ec 02       		.uleb128 0x2
 1078 00ed 04       		.byte	0x4
 1079 00ee 07       		.byte	0x7
 1080 00ef 90010000 		.4byte	.LASF21
 1081 00f3 06       		.uleb128 0x6
 1082 00f4 29000000 		.4byte	.LASF25
 1083 00f8 01       		.byte	0x1
 1084 00f9 5E       		.byte	0x5e
 1085 00fa 00000000 		.4byte	.LFB2
 1086 00fe F4000000 		.4byte	.LFE2-.LFB2
 1087 0102 01       		.uleb128 0x1
 1088 0103 9C       		.byte	0x9c
 1089 0104 5D010000 		.4byte	0x15d
 1090 0108 07       		.uleb128 0x7
 1091 0109 8A020000 		.4byte	.LASF22
 1092 010d 01       		.byte	0x1
 1093 010e 60       		.byte	0x60
 1094 010f 83000000 		.4byte	0x83
 1095 0113 00000000 		.4byte	.LLST0
 1096 0117 07       		.uleb128 0x7
 1097 0118 3F010000 		.4byte	.LASF23
 1098 011c 01       		.byte	0x1
 1099 011d 61       		.byte	0x61
 1100 011e 83000000 		.4byte	0x83
 1101 0122 1F000000 		.4byte	.LLST1
 1102 0126 07       		.uleb128 0x7
 1103 0127 0F000000 		.4byte	.LASF24
 1104 012b 01       		.byte	0x1
 1105 012c 62       		.byte	0x62
 1106 012d 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 36


 1107 0131 60000000 		.4byte	.LLST2
 1108 0135 08       		.uleb128 0x8
 1109 0136 0A000000 		.4byte	.LVL0
 1110 013a 4C050000 		.4byte	0x54c
 1111 013e 4D010000 		.4byte	0x14d
 1112 0142 09       		.uleb128 0x9
 1113 0143 01       		.uleb128 0x1
 1114 0144 50       		.byte	0x50
 1115 0145 01       		.uleb128 0x1
 1116 0146 49       		.byte	0x49
 1117 0147 09       		.uleb128 0x9
 1118 0148 01       		.uleb128 0x1
 1119 0149 51       		.byte	0x51
 1120 014a 01       		.uleb128 0x1
 1121 014b 33       		.byte	0x33
 1122 014c 00       		.byte	0
 1123 014d 0A       		.uleb128 0xa
 1124 014e 12000000 		.4byte	.LVL1
 1125 0152 57050000 		.4byte	0x557
 1126 0156 09       		.uleb128 0x9
 1127 0157 01       		.uleb128 0x1
 1128 0158 50       		.byte	0x50
 1129 0159 01       		.uleb128 0x1
 1130 015a 49       		.byte	0x49
 1131 015b 00       		.byte	0
 1132 015c 00       		.byte	0
 1133 015d 0B       		.uleb128 0xb
 1134 015e 50030000 		.4byte	.LASF26
 1135 0162 01       		.byte	0x1
 1136 0163 4A01     		.2byte	0x14a
 1137 0165 00000000 		.4byte	.LFB3
 1138 0169 30000000 		.4byte	.LFE3-.LFB3
 1139 016d 01       		.uleb128 0x1
 1140 016e 9C       		.byte	0x9c
 1141 016f 83010000 		.4byte	0x183
 1142 0173 0A       		.uleb128 0xa
 1143 0174 24000000 		.4byte	.LVL10
 1144 0178 62050000 		.4byte	0x562
 1145 017c 09       		.uleb128 0x9
 1146 017d 01       		.uleb128 0x1
 1147 017e 50       		.byte	0x50
 1148 017f 01       		.uleb128 0x1
 1149 0180 3A       		.byte	0x3a
 1150 0181 00       		.byte	0
 1151 0182 00       		.byte	0
 1152 0183 06       		.uleb128 0x6
 1153 0184 81000000 		.4byte	.LASF27
 1154 0188 01       		.byte	0x1
 1155 0189 3F       		.byte	0x3f
 1156 018a 00000000 		.4byte	.LFB1
 1157 018e 20000000 		.4byte	.LFE1-.LFB1
 1158 0192 01       		.uleb128 0x1
 1159 0193 9C       		.byte	0x9c
 1160 0194 AB010000 		.4byte	0x1ab
 1161 0198 0C       		.uleb128 0xc
 1162 0199 0E000000 		.4byte	.LVL11
 1163 019d F3000000 		.4byte	0xf3
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 37


 1164 01a1 0C       		.uleb128 0xc
 1165 01a2 18000000 		.4byte	.LVL12
 1166 01a6 5D010000 		.4byte	0x15d
 1167 01aa 00       		.byte	0
 1168 01ab 0D       		.uleb128 0xd
 1169 01ac 81020000 		.4byte	.LASF28
 1170 01b0 01       		.byte	0x1
 1171 01b1 6D01     		.2byte	0x16d
 1172 01b3 00000000 		.4byte	.LFB4
 1173 01b7 10000000 		.4byte	.LFE4-.LFB4
 1174 01bb 01       		.uleb128 0x1
 1175 01bc 9C       		.byte	0x9c
 1176 01bd 0D       		.uleb128 0xd
 1177 01be 49000000 		.4byte	.LASF29
 1178 01c2 01       		.byte	0x1
 1179 01c3 8701     		.2byte	0x187
 1180 01c5 00000000 		.4byte	.LFB5
 1181 01c9 14000000 		.4byte	.LFE5-.LFB5
 1182 01cd 01       		.uleb128 0x1
 1183 01ce 9C       		.byte	0x9c
 1184 01cf 0D       		.uleb128 0xd
 1185 01d0 6B010000 		.4byte	.LASF30
 1186 01d4 01       		.byte	0x1
 1187 01d5 A001     		.2byte	0x1a0
 1188 01d7 00000000 		.4byte	.LFB6
 1189 01db 14000000 		.4byte	.LFE6-.LFB6
 1190 01df 01       		.uleb128 0x1
 1191 01e0 9C       		.byte	0x9c
 1192 01e1 0E       		.uleb128 0xe
 1193 01e2 BF010000 		.4byte	.LASF32
 1194 01e6 01       		.byte	0x1
 1195 01e7 C201     		.2byte	0x1c2
 1196 01e9 83000000 		.4byte	0x83
 1197 01ed 00000000 		.4byte	.LFB7
 1198 01f1 28000000 		.4byte	.LFE7-.LFB7
 1199 01f5 01       		.uleb128 0x1
 1200 01f6 9C       		.byte	0x9c
 1201 01f7 1C020000 		.4byte	0x21c
 1202 01fb 0F       		.uleb128 0xf
 1203 01fc EB000000 		.4byte	.LASF34
 1204 0200 01       		.byte	0x1
 1205 0201 C201     		.2byte	0x1c2
 1206 0203 83000000 		.4byte	0x83
 1207 0207 76000000 		.4byte	.LLST3
 1208 020b 10       		.uleb128 0x10
 1209 020c 74000000 		.4byte	.LASF31
 1210 0210 01       		.byte	0x1
 1211 0211 C401     		.2byte	0x1c4
 1212 0213 83000000 		.4byte	0x83
 1213 0217 BB000000 		.4byte	.LLST4
 1214 021b 00       		.byte	0
 1215 021c 0E       		.uleb128 0xe
 1216 021d B6030000 		.4byte	.LASF33
 1217 0221 01       		.byte	0x1
 1218 0222 F801     		.2byte	0x1f8
 1219 0224 8F000000 		.4byte	0x8f
 1220 0228 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 38


 1221 022c 2C000000 		.4byte	.LFE8-.LFB8
 1222 0230 01       		.uleb128 0x1
 1223 0231 9C       		.byte	0x9c
 1224 0232 66020000 		.4byte	0x266
 1225 0236 0F       		.uleb128 0xf
 1226 0237 22030000 		.4byte	.LASF35
 1227 023b 01       		.byte	0x1
 1228 023c F801     		.2byte	0x1f8
 1229 023e 83000000 		.4byte	0x83
 1230 0242 F1000000 		.4byte	.LLST5
 1231 0246 10       		.uleb128 0x10
 1232 0247 AF030000 		.4byte	.LASF36
 1233 024b 01       		.byte	0x1
 1234 024c FA01     		.2byte	0x1fa
 1235 024e 83000000 		.4byte	0x83
 1236 0252 36010000 		.4byte	.LLST6
 1237 0256 0A       		.uleb128 0xa
 1238 0257 0C000000 		.4byte	.LVL22
 1239 025b 6D050000 		.4byte	0x56d
 1240 025f 09       		.uleb128 0x9
 1241 0260 01       		.uleb128 0x1
 1242 0261 50       		.byte	0x50
 1243 0262 01       		.uleb128 0x1
 1244 0263 30       		.byte	0x30
 1245 0264 00       		.byte	0
 1246 0265 00       		.byte	0
 1247 0266 0B       		.uleb128 0xb
 1248 0267 EA010000 		.4byte	.LASF37
 1249 026b 01       		.byte	0x1
 1250 026c 2502     		.2byte	0x225
 1251 026e 00000000 		.4byte	.LFB9
 1252 0272 10000000 		.4byte	.LFE9-.LFB9
 1253 0276 01       		.uleb128 0x1
 1254 0277 9C       		.byte	0x9c
 1255 0278 8D020000 		.4byte	0x28d
 1256 027c 0F       		.uleb128 0xf
 1257 027d DA000000 		.4byte	.LASF38
 1258 0281 01       		.byte	0x1
 1259 0282 2502     		.2byte	0x225
 1260 0284 83000000 		.4byte	0x83
 1261 0288 54010000 		.4byte	.LLST7
 1262 028c 00       		.byte	0
 1263 028d 0B       		.uleb128 0xb
 1264 028e 47020000 		.4byte	.LASF39
 1265 0292 01       		.byte	0x1
 1266 0293 5102     		.2byte	0x251
 1267 0295 00000000 		.4byte	.LFB10
 1268 0299 1C000000 		.4byte	.LFE10-.LFB10
 1269 029d 01       		.uleb128 0x1
 1270 029e 9C       		.byte	0x9c
 1271 029f B4020000 		.4byte	0x2b4
 1272 02a3 0F       		.uleb128 0xf
 1273 02a4 99010000 		.4byte	.LASF40
 1274 02a8 01       		.byte	0x1
 1275 02a9 5102     		.2byte	0x251
 1276 02ab 83000000 		.4byte	0x83
 1277 02af 75010000 		.4byte	.LLST8
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 39


 1278 02b3 00       		.byte	0
 1279 02b4 0B       		.uleb128 0xb
 1280 02b5 AE010000 		.4byte	.LASF41
 1281 02b9 01       		.byte	0x1
 1282 02ba 6602     		.2byte	0x266
 1283 02bc 00000000 		.4byte	.LFB11
 1284 02c0 18000000 		.4byte	.LFE11-.LFB11
 1285 02c4 01       		.uleb128 0x1
 1286 02c5 9C       		.byte	0x9c
 1287 02c6 DB020000 		.4byte	0x2db
 1288 02ca 0F       		.uleb128 0xf
 1289 02cb 29020000 		.4byte	.LASF42
 1290 02cf 01       		.byte	0x1
 1291 02d0 6602     		.2byte	0x266
 1292 02d2 83000000 		.4byte	0x83
 1293 02d6 96010000 		.4byte	.LLST9
 1294 02da 00       		.byte	0
 1295 02db 0B       		.uleb128 0xb
 1296 02dc F3000000 		.4byte	.LASF43
 1297 02e0 01       		.byte	0x1
 1298 02e1 7E02     		.2byte	0x27e
 1299 02e3 00000000 		.4byte	.LFB12
 1300 02e7 10000000 		.4byte	.LFE12-.LFB12
 1301 02eb 01       		.uleb128 0x1
 1302 02ec 9C       		.byte	0x9c
 1303 02ed 02030000 		.4byte	0x302
 1304 02f1 0F       		.uleb128 0xf
 1305 02f2 DA000000 		.4byte	.LASF38
 1306 02f6 01       		.byte	0x1
 1307 02f7 7E02     		.2byte	0x27e
 1308 02f9 83000000 		.4byte	0x83
 1309 02fd B7010000 		.4byte	.LLST10
 1310 0301 00       		.byte	0
 1311 0302 0B       		.uleb128 0xb
 1312 0303 2A010000 		.4byte	.LASF44
 1313 0307 01       		.byte	0x1
 1314 0308 9502     		.2byte	0x295
 1315 030a 00000000 		.4byte	.LFB13
 1316 030e 10000000 		.4byte	.LFE13-.LFB13
 1317 0312 01       		.uleb128 0x1
 1318 0313 9C       		.byte	0x9c
 1319 0314 29030000 		.4byte	0x329
 1320 0318 0F       		.uleb128 0xf
 1321 0319 DA000000 		.4byte	.LASF38
 1322 031d 01       		.byte	0x1
 1323 031e 9502     		.2byte	0x295
 1324 0320 83000000 		.4byte	0x83
 1325 0324 D8010000 		.4byte	.LLST11
 1326 0328 00       		.byte	0
 1327 0329 0B       		.uleb128 0xb
 1328 032a 61030000 		.4byte	.LASF45
 1329 032e 01       		.byte	0x1
 1330 032f B102     		.2byte	0x2b1
 1331 0331 00000000 		.4byte	.LFB14
 1332 0335 1C000000 		.4byte	.LFE14-.LFB14
 1333 0339 01       		.uleb128 0x1
 1334 033a 9C       		.byte	0x9c
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 40


 1335 033b 6F030000 		.4byte	0x36f
 1336 033f 0F       		.uleb128 0xf
 1337 0340 22030000 		.4byte	.LASF35
 1338 0344 01       		.byte	0x1
 1339 0345 B102     		.2byte	0x2b1
 1340 0347 83000000 		.4byte	0x83
 1341 034b F9010000 		.4byte	.LLST12
 1342 034f 0F       		.uleb128 0xf
 1343 0350 3F030000 		.4byte	.LASF46
 1344 0354 01       		.byte	0x1
 1345 0355 B102     		.2byte	0x2b1
 1346 0357 8F000000 		.4byte	0x8f
 1347 035b 25020000 		.4byte	.LLST13
 1348 035f 0A       		.uleb128 0xa
 1349 0360 10000000 		.4byte	.LVL40
 1350 0364 6D050000 		.4byte	0x56d
 1351 0368 09       		.uleb128 0x9
 1352 0369 01       		.uleb128 0x1
 1353 036a 50       		.byte	0x50
 1354 036b 01       		.uleb128 0x1
 1355 036c 30       		.byte	0x30
 1356 036d 00       		.byte	0
 1357 036e 00       		.byte	0
 1358 036f 0B       		.uleb128 0xb
 1359 0370 17020000 		.4byte	.LASF47
 1360 0374 01       		.byte	0x1
 1361 0375 D302     		.2byte	0x2d3
 1362 0377 00000000 		.4byte	.LFB15
 1363 037b 1C000000 		.4byte	.LFE15-.LFB15
 1364 037f 01       		.uleb128 0x1
 1365 0380 9C       		.byte	0x9c
 1366 0381 B5030000 		.4byte	0x3b5
 1367 0385 0F       		.uleb128 0xf
 1368 0386 22030000 		.4byte	.LASF35
 1369 038a 01       		.byte	0x1
 1370 038b D302     		.2byte	0x2d3
 1371 038d 83000000 		.4byte	0x83
 1372 0391 46020000 		.4byte	.LLST14
 1373 0395 0F       		.uleb128 0xf
 1374 0396 07000000 		.4byte	.LASF48
 1375 039a 01       		.byte	0x1
 1376 039b D302     		.2byte	0x2d3
 1377 039d 9B000000 		.4byte	0x9b
 1378 03a1 72020000 		.4byte	.LLST15
 1379 03a5 0A       		.uleb128 0xa
 1380 03a6 10000000 		.4byte	.LVL44
 1381 03aa 6D050000 		.4byte	0x56d
 1382 03ae 09       		.uleb128 0x9
 1383 03af 01       		.uleb128 0x1
 1384 03b0 50       		.byte	0x50
 1385 03b1 01       		.uleb128 0x1
 1386 03b2 30       		.byte	0x30
 1387 03b3 00       		.byte	0
 1388 03b4 00       		.byte	0
 1389 03b5 11       		.uleb128 0x11
 1390 03b6 33020000 		.4byte	.LASF49
 1391 03ba 01       		.byte	0x1
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 41


 1392 03bb F402     		.2byte	0x2f4
 1393 03bd 8F000000 		.4byte	0x8f
 1394 03c1 00000000 		.4byte	.LFB16
 1395 03c5 5C000000 		.4byte	.LFE16-.LFB16
 1396 03c9 01       		.uleb128 0x1
 1397 03ca 9C       		.byte	0x9c
 1398 03cb 0D040000 		.4byte	0x40d
 1399 03cf 0F       		.uleb128 0xf
 1400 03d0 22030000 		.4byte	.LASF35
 1401 03d4 01       		.byte	0x1
 1402 03d5 F402     		.2byte	0x2f4
 1403 03d7 83000000 		.4byte	0x83
 1404 03db A2020000 		.4byte	.LLST16
 1405 03df 0F       		.uleb128 0xf
 1406 03e0 46030000 		.4byte	.LASF50
 1407 03e4 01       		.byte	0x1
 1408 03e5 F402     		.2byte	0x2f4
 1409 03e7 8F000000 		.4byte	0x8f
 1410 03eb CE020000 		.4byte	.LLST17
 1411 03ef 12       		.uleb128 0x12
 1412 03f0 7B010000 		.4byte	.LASF51
 1413 03f4 01       		.byte	0x1
 1414 03f5 F602     		.2byte	0x2f6
 1415 03f7 8F000000 		.4byte	0x8f
 1416 03fb 01       		.uleb128 0x1
 1417 03fc 50       		.byte	0x50
 1418 03fd 0A       		.uleb128 0xa
 1419 03fe 10000000 		.4byte	.LVL49
 1420 0402 6D050000 		.4byte	0x56d
 1421 0406 09       		.uleb128 0x9
 1422 0407 01       		.uleb128 0x1
 1423 0408 50       		.byte	0x50
 1424 0409 01       		.uleb128 0x1
 1425 040a 30       		.byte	0x30
 1426 040b 00       		.byte	0
 1427 040c 00       		.byte	0
 1428 040d 11       		.uleb128 0x11
 1429 040e 94000000 		.4byte	.LASF52
 1430 0412 01       		.byte	0x1
 1431 0413 2A03     		.2byte	0x32a
 1432 0415 9B000000 		.4byte	0x9b
 1433 0419 00000000 		.4byte	.LFB17
 1434 041d 40000000 		.4byte	.LFE17-.LFB17
 1435 0421 01       		.uleb128 0x1
 1436 0422 9C       		.byte	0x9c
 1437 0423 63040000 		.4byte	0x463
 1438 0427 0F       		.uleb128 0xf
 1439 0428 22030000 		.4byte	.LASF35
 1440 042c 01       		.byte	0x1
 1441 042d 2A03     		.2byte	0x32a
 1442 042f 83000000 		.4byte	0x83
 1443 0433 FA020000 		.4byte	.LLST18
 1444 0437 0F       		.uleb128 0xf
 1445 0438 46030000 		.4byte	.LASF50
 1446 043c 01       		.byte	0x1
 1447 043d 2A03     		.2byte	0x32a
 1448 043f 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 42


 1449 0443 26030000 		.4byte	.LLST19
 1450 0447 13       		.uleb128 0x13
 1451 0448 11010000 		.4byte	.LASF66
 1452 044c 01       		.byte	0x1
 1453 044d 2C03     		.2byte	0x32c
 1454 044f C1000000 		.4byte	0xc1
 1455 0453 0A       		.uleb128 0xa
 1456 0454 10000000 		.4byte	.LVL57
 1457 0458 6D050000 		.4byte	0x56d
 1458 045c 09       		.uleb128 0x9
 1459 045d 01       		.uleb128 0x1
 1460 045e 50       		.byte	0x50
 1461 045f 01       		.uleb128 0x1
 1462 0460 30       		.byte	0x30
 1463 0461 00       		.byte	0
 1464 0462 00       		.byte	0
 1465 0463 11       		.uleb128 0x11
 1466 0464 16000000 		.4byte	.LASF53
 1467 0468 01       		.byte	0x1
 1468 0469 5703     		.2byte	0x357
 1469 046b A7000000 		.4byte	0xa7
 1470 046f 00000000 		.4byte	.LFB18
 1471 0473 48000000 		.4byte	.LFE18-.LFB18
 1472 0477 01       		.uleb128 0x1
 1473 0478 9C       		.byte	0x9c
 1474 0479 BB040000 		.4byte	0x4bb
 1475 047d 0F       		.uleb128 0xf
 1476 047e 22030000 		.4byte	.LASF35
 1477 0482 01       		.byte	0x1
 1478 0483 5703     		.2byte	0x357
 1479 0485 83000000 		.4byte	0x83
 1480 0489 52030000 		.4byte	.LLST20
 1481 048d 0F       		.uleb128 0xf
 1482 048e 46030000 		.4byte	.LASF50
 1483 0492 01       		.byte	0x1
 1484 0493 5703     		.2byte	0x357
 1485 0495 8F000000 		.4byte	0x8f
 1486 0499 7E030000 		.4byte	.LLST21
 1487 049d 12       		.uleb128 0x12
 1488 049e 39010000 		.4byte	.LASF54
 1489 04a2 01       		.byte	0x1
 1490 04a3 5903     		.2byte	0x359
 1491 04a5 A7000000 		.4byte	0xa7
 1492 04a9 01       		.uleb128 0x1
 1493 04aa 50       		.byte	0x50
 1494 04ab 0A       		.uleb128 0xa
 1495 04ac 10000000 		.4byte	.LVL64
 1496 04b0 6D050000 		.4byte	0x56d
 1497 04b4 09       		.uleb128 0x9
 1498 04b5 01       		.uleb128 0x1
 1499 04b6 50       		.byte	0x50
 1500 04b7 01       		.uleb128 0x1
 1501 04b8 30       		.byte	0x30
 1502 04b9 00       		.byte	0
 1503 04ba 00       		.byte	0
 1504 04bb 14       		.uleb128 0x14
 1505 04bc CB040000 		.4byte	0x4cb
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 43


 1506 04c0 CB040000 		.4byte	0x4cb
 1507 04c4 15       		.uleb128 0x15
 1508 04c5 EC000000 		.4byte	0xec
 1509 04c9 00       		.byte	0
 1510 04ca 00       		.byte	0
 1511 04cb 16       		.uleb128 0x16
 1512 04cc 83000000 		.4byte	0x83
 1513 04d0 17       		.uleb128 0x17
 1514 04d1 2C030000 		.4byte	.LASF55
 1515 04d5 01       		.byte	0x1
 1516 04d6 21       		.byte	0x21
 1517 04d7 E0040000 		.4byte	0x4e0
 1518 04db 04       		.byte	0x4
 1519 04dc 00       		.byte	0
 1520 04dd 00       		.byte	0
 1521 04de 00       		.byte	0
 1522 04df 00       		.byte	0
 1523 04e0 16       		.uleb128 0x16
 1524 04e1 BB040000 		.4byte	0x4bb
 1525 04e5 18       		.uleb128 0x18
 1526 04e6 DF000000 		.4byte	.LASF56
 1527 04ea 01       		.byte	0x1
 1528 04eb 18       		.byte	0x18
 1529 04ec 6B000000 		.4byte	0x6b
 1530 04f0 05       		.uleb128 0x5
 1531 04f1 03       		.byte	0x3
 1532 04f2 00000000 		.4byte	ADC_initVar
 1533 04f6 14       		.uleb128 0x14
 1534 04f7 06050000 		.4byte	0x506
 1535 04fb 06050000 		.4byte	0x506
 1536 04ff 15       		.uleb128 0x15
 1537 0500 EC000000 		.4byte	0xec
 1538 0504 00       		.byte	0
 1539 0505 00       		.byte	0
 1540 0506 05       		.uleb128 0x5
 1541 0507 8F000000 		.4byte	0x8f
 1542 050b 18       		.uleb128 0x18
 1543 050c 6C020000 		.4byte	.LASF57
 1544 0510 01       		.byte	0x1
 1545 0511 19       		.byte	0x19
 1546 0512 1C050000 		.4byte	0x51c
 1547 0516 05       		.uleb128 0x5
 1548 0517 03       		.byte	0x3
 1549 0518 00000000 		.4byte	ADC_offset
 1550 051c 05       		.uleb128 0x5
 1551 051d F6040000 		.4byte	0x4f6
 1552 0521 14       		.uleb128 0x14
 1553 0522 31050000 		.4byte	0x531
 1554 0526 31050000 		.4byte	0x531
 1555 052a 15       		.uleb128 0x15
 1556 052b EC000000 		.4byte	0xec
 1557 052f 00       		.byte	0
 1558 0530 00       		.byte	0
 1559 0531 05       		.uleb128 0x5
 1560 0532 9B000000 		.4byte	0x9b
 1561 0536 18       		.uleb128 0x18
 1562 0537 A8000000 		.4byte	.LASF58
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 44


 1563 053b 01       		.byte	0x1
 1564 053c 1A       		.byte	0x1a
 1565 053d 47050000 		.4byte	0x547
 1566 0541 05       		.uleb128 0x5
 1567 0542 03       		.byte	0x3
 1568 0543 00000000 		.4byte	ADC_countsPer10Volt
 1569 0547 05       		.uleb128 0x5
 1570 0548 21050000 		.4byte	0x521
 1571 054c 19       		.uleb128 0x19
 1572 054d D9010000 		.4byte	.LASF59
 1573 0551 D9010000 		.4byte	.LASF59
 1574 0555 03       		.byte	0x3
 1575 0556 C0       		.byte	0xc0
 1576 0557 19       		.uleb128 0x19
 1577 0558 5C010000 		.4byte	.LASF60
 1578 055c 5C010000 		.4byte	.LASF60
 1579 0560 03       		.byte	0x3
 1580 0561 BD       		.byte	0xbd
 1581 0562 19       		.uleb128 0x19
 1582 0563 C2000000 		.4byte	.LASF61
 1583 0567 C2000000 		.4byte	.LASF61
 1584 056b 03       		.byte	0x3
 1585 056c DA       		.byte	0xda
 1586 056d 19       		.uleb128 0x19
 1587 056e 57020000 		.4byte	.LASF62
 1588 0572 57020000 		.4byte	.LASF62
 1589 0576 03       		.byte	0x3
 1590 0577 E7       		.byte	0xe7
 1591 0578 00       		.byte	0
 1592              		.section	.debug_abbrev,"",%progbits
 1593              	.Ldebug_abbrev0:
 1594 0000 01       		.uleb128 0x1
 1595 0001 11       		.uleb128 0x11
 1596 0002 01       		.byte	0x1
 1597 0003 25       		.uleb128 0x25
 1598 0004 0E       		.uleb128 0xe
 1599 0005 13       		.uleb128 0x13
 1600 0006 0B       		.uleb128 0xb
 1601 0007 03       		.uleb128 0x3
 1602 0008 0E       		.uleb128 0xe
 1603 0009 1B       		.uleb128 0x1b
 1604 000a 0E       		.uleb128 0xe
 1605 000b 55       		.uleb128 0x55
 1606 000c 17       		.uleb128 0x17
 1607 000d 11       		.uleb128 0x11
 1608 000e 01       		.uleb128 0x1
 1609 000f 10       		.uleb128 0x10
 1610 0010 17       		.uleb128 0x17
 1611 0011 00       		.byte	0
 1612 0012 00       		.byte	0
 1613 0013 02       		.uleb128 0x2
 1614 0014 24       		.uleb128 0x24
 1615 0015 00       		.byte	0
 1616 0016 0B       		.uleb128 0xb
 1617 0017 0B       		.uleb128 0xb
 1618 0018 3E       		.uleb128 0x3e
 1619 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 45


 1620 001a 03       		.uleb128 0x3
 1621 001b 0E       		.uleb128 0xe
 1622 001c 00       		.byte	0
 1623 001d 00       		.byte	0
 1624 001e 03       		.uleb128 0x3
 1625 001f 24       		.uleb128 0x24
 1626 0020 00       		.byte	0
 1627 0021 0B       		.uleb128 0xb
 1628 0022 0B       		.uleb128 0xb
 1629 0023 3E       		.uleb128 0x3e
 1630 0024 0B       		.uleb128 0xb
 1631 0025 03       		.uleb128 0x3
 1632 0026 08       		.uleb128 0x8
 1633 0027 00       		.byte	0
 1634 0028 00       		.byte	0
 1635 0029 04       		.uleb128 0x4
 1636 002a 16       		.uleb128 0x16
 1637 002b 00       		.byte	0
 1638 002c 03       		.uleb128 0x3
 1639 002d 0E       		.uleb128 0xe
 1640 002e 3A       		.uleb128 0x3a
 1641 002f 0B       		.uleb128 0xb
 1642 0030 3B       		.uleb128 0x3b
 1643 0031 05       		.uleb128 0x5
 1644 0032 49       		.uleb128 0x49
 1645 0033 13       		.uleb128 0x13
 1646 0034 00       		.byte	0
 1647 0035 00       		.byte	0
 1648 0036 05       		.uleb128 0x5
 1649 0037 35       		.uleb128 0x35
 1650 0038 00       		.byte	0
 1651 0039 49       		.uleb128 0x49
 1652 003a 13       		.uleb128 0x13
 1653 003b 00       		.byte	0
 1654 003c 00       		.byte	0
 1655 003d 06       		.uleb128 0x6
 1656 003e 2E       		.uleb128 0x2e
 1657 003f 01       		.byte	0x1
 1658 0040 3F       		.uleb128 0x3f
 1659 0041 19       		.uleb128 0x19
 1660 0042 03       		.uleb128 0x3
 1661 0043 0E       		.uleb128 0xe
 1662 0044 3A       		.uleb128 0x3a
 1663 0045 0B       		.uleb128 0xb
 1664 0046 3B       		.uleb128 0x3b
 1665 0047 0B       		.uleb128 0xb
 1666 0048 27       		.uleb128 0x27
 1667 0049 19       		.uleb128 0x19
 1668 004a 11       		.uleb128 0x11
 1669 004b 01       		.uleb128 0x1
 1670 004c 12       		.uleb128 0x12
 1671 004d 06       		.uleb128 0x6
 1672 004e 40       		.uleb128 0x40
 1673 004f 18       		.uleb128 0x18
 1674 0050 9742     		.uleb128 0x2117
 1675 0052 19       		.uleb128 0x19
 1676 0053 01       		.uleb128 0x1
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 46


 1677 0054 13       		.uleb128 0x13
 1678 0055 00       		.byte	0
 1679 0056 00       		.byte	0
 1680 0057 07       		.uleb128 0x7
 1681 0058 34       		.uleb128 0x34
 1682 0059 00       		.byte	0
 1683 005a 03       		.uleb128 0x3
 1684 005b 0E       		.uleb128 0xe
 1685 005c 3A       		.uleb128 0x3a
 1686 005d 0B       		.uleb128 0xb
 1687 005e 3B       		.uleb128 0x3b
 1688 005f 0B       		.uleb128 0xb
 1689 0060 49       		.uleb128 0x49
 1690 0061 13       		.uleb128 0x13
 1691 0062 02       		.uleb128 0x2
 1692 0063 17       		.uleb128 0x17
 1693 0064 00       		.byte	0
 1694 0065 00       		.byte	0
 1695 0066 08       		.uleb128 0x8
 1696 0067 898201   		.uleb128 0x4109
 1697 006a 01       		.byte	0x1
 1698 006b 11       		.uleb128 0x11
 1699 006c 01       		.uleb128 0x1
 1700 006d 31       		.uleb128 0x31
 1701 006e 13       		.uleb128 0x13
 1702 006f 01       		.uleb128 0x1
 1703 0070 13       		.uleb128 0x13
 1704 0071 00       		.byte	0
 1705 0072 00       		.byte	0
 1706 0073 09       		.uleb128 0x9
 1707 0074 8A8201   		.uleb128 0x410a
 1708 0077 00       		.byte	0
 1709 0078 02       		.uleb128 0x2
 1710 0079 18       		.uleb128 0x18
 1711 007a 9142     		.uleb128 0x2111
 1712 007c 18       		.uleb128 0x18
 1713 007d 00       		.byte	0
 1714 007e 00       		.byte	0
 1715 007f 0A       		.uleb128 0xa
 1716 0080 898201   		.uleb128 0x4109
 1717 0083 01       		.byte	0x1
 1718 0084 11       		.uleb128 0x11
 1719 0085 01       		.uleb128 0x1
 1720 0086 31       		.uleb128 0x31
 1721 0087 13       		.uleb128 0x13
 1722 0088 00       		.byte	0
 1723 0089 00       		.byte	0
 1724 008a 0B       		.uleb128 0xb
 1725 008b 2E       		.uleb128 0x2e
 1726 008c 01       		.byte	0x1
 1727 008d 3F       		.uleb128 0x3f
 1728 008e 19       		.uleb128 0x19
 1729 008f 03       		.uleb128 0x3
 1730 0090 0E       		.uleb128 0xe
 1731 0091 3A       		.uleb128 0x3a
 1732 0092 0B       		.uleb128 0xb
 1733 0093 3B       		.uleb128 0x3b
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 47


 1734 0094 05       		.uleb128 0x5
 1735 0095 27       		.uleb128 0x27
 1736 0096 19       		.uleb128 0x19
 1737 0097 11       		.uleb128 0x11
 1738 0098 01       		.uleb128 0x1
 1739 0099 12       		.uleb128 0x12
 1740 009a 06       		.uleb128 0x6
 1741 009b 40       		.uleb128 0x40
 1742 009c 18       		.uleb128 0x18
 1743 009d 9742     		.uleb128 0x2117
 1744 009f 19       		.uleb128 0x19
 1745 00a0 01       		.uleb128 0x1
 1746 00a1 13       		.uleb128 0x13
 1747 00a2 00       		.byte	0
 1748 00a3 00       		.byte	0
 1749 00a4 0C       		.uleb128 0xc
 1750 00a5 898201   		.uleb128 0x4109
 1751 00a8 00       		.byte	0
 1752 00a9 11       		.uleb128 0x11
 1753 00aa 01       		.uleb128 0x1
 1754 00ab 31       		.uleb128 0x31
 1755 00ac 13       		.uleb128 0x13
 1756 00ad 00       		.byte	0
 1757 00ae 00       		.byte	0
 1758 00af 0D       		.uleb128 0xd
 1759 00b0 2E       		.uleb128 0x2e
 1760 00b1 00       		.byte	0
 1761 00b2 3F       		.uleb128 0x3f
 1762 00b3 19       		.uleb128 0x19
 1763 00b4 03       		.uleb128 0x3
 1764 00b5 0E       		.uleb128 0xe
 1765 00b6 3A       		.uleb128 0x3a
 1766 00b7 0B       		.uleb128 0xb
 1767 00b8 3B       		.uleb128 0x3b
 1768 00b9 05       		.uleb128 0x5
 1769 00ba 27       		.uleb128 0x27
 1770 00bb 19       		.uleb128 0x19
 1771 00bc 11       		.uleb128 0x11
 1772 00bd 01       		.uleb128 0x1
 1773 00be 12       		.uleb128 0x12
 1774 00bf 06       		.uleb128 0x6
 1775 00c0 40       		.uleb128 0x40
 1776 00c1 18       		.uleb128 0x18
 1777 00c2 9742     		.uleb128 0x2117
 1778 00c4 19       		.uleb128 0x19
 1779 00c5 00       		.byte	0
 1780 00c6 00       		.byte	0
 1781 00c7 0E       		.uleb128 0xe
 1782 00c8 2E       		.uleb128 0x2e
 1783 00c9 01       		.byte	0x1
 1784 00ca 3F       		.uleb128 0x3f
 1785 00cb 19       		.uleb128 0x19
 1786 00cc 03       		.uleb128 0x3
 1787 00cd 0E       		.uleb128 0xe
 1788 00ce 3A       		.uleb128 0x3a
 1789 00cf 0B       		.uleb128 0xb
 1790 00d0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 48


 1791 00d1 05       		.uleb128 0x5
 1792 00d2 27       		.uleb128 0x27
 1793 00d3 19       		.uleb128 0x19
 1794 00d4 49       		.uleb128 0x49
 1795 00d5 13       		.uleb128 0x13
 1796 00d6 11       		.uleb128 0x11
 1797 00d7 01       		.uleb128 0x1
 1798 00d8 12       		.uleb128 0x12
 1799 00d9 06       		.uleb128 0x6
 1800 00da 40       		.uleb128 0x40
 1801 00db 18       		.uleb128 0x18
 1802 00dc 9742     		.uleb128 0x2117
 1803 00de 19       		.uleb128 0x19
 1804 00df 01       		.uleb128 0x1
 1805 00e0 13       		.uleb128 0x13
 1806 00e1 00       		.byte	0
 1807 00e2 00       		.byte	0
 1808 00e3 0F       		.uleb128 0xf
 1809 00e4 05       		.uleb128 0x5
 1810 00e5 00       		.byte	0
 1811 00e6 03       		.uleb128 0x3
 1812 00e7 0E       		.uleb128 0xe
 1813 00e8 3A       		.uleb128 0x3a
 1814 00e9 0B       		.uleb128 0xb
 1815 00ea 3B       		.uleb128 0x3b
 1816 00eb 05       		.uleb128 0x5
 1817 00ec 49       		.uleb128 0x49
 1818 00ed 13       		.uleb128 0x13
 1819 00ee 02       		.uleb128 0x2
 1820 00ef 17       		.uleb128 0x17
 1821 00f0 00       		.byte	0
 1822 00f1 00       		.byte	0
 1823 00f2 10       		.uleb128 0x10
 1824 00f3 34       		.uleb128 0x34
 1825 00f4 00       		.byte	0
 1826 00f5 03       		.uleb128 0x3
 1827 00f6 0E       		.uleb128 0xe
 1828 00f7 3A       		.uleb128 0x3a
 1829 00f8 0B       		.uleb128 0xb
 1830 00f9 3B       		.uleb128 0x3b
 1831 00fa 05       		.uleb128 0x5
 1832 00fb 49       		.uleb128 0x49
 1833 00fc 13       		.uleb128 0x13
 1834 00fd 02       		.uleb128 0x2
 1835 00fe 17       		.uleb128 0x17
 1836 00ff 00       		.byte	0
 1837 0100 00       		.byte	0
 1838 0101 11       		.uleb128 0x11
 1839 0102 2E       		.uleb128 0x2e
 1840 0103 01       		.byte	0x1
 1841 0104 3F       		.uleb128 0x3f
 1842 0105 19       		.uleb128 0x19
 1843 0106 03       		.uleb128 0x3
 1844 0107 0E       		.uleb128 0xe
 1845 0108 3A       		.uleb128 0x3a
 1846 0109 0B       		.uleb128 0xb
 1847 010a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 49


 1848 010b 05       		.uleb128 0x5
 1849 010c 27       		.uleb128 0x27
 1850 010d 19       		.uleb128 0x19
 1851 010e 49       		.uleb128 0x49
 1852 010f 13       		.uleb128 0x13
 1853 0110 11       		.uleb128 0x11
 1854 0111 01       		.uleb128 0x1
 1855 0112 12       		.uleb128 0x12
 1856 0113 06       		.uleb128 0x6
 1857 0114 40       		.uleb128 0x40
 1858 0115 18       		.uleb128 0x18
 1859 0116 9642     		.uleb128 0x2116
 1860 0118 19       		.uleb128 0x19
 1861 0119 01       		.uleb128 0x1
 1862 011a 13       		.uleb128 0x13
 1863 011b 00       		.byte	0
 1864 011c 00       		.byte	0
 1865 011d 12       		.uleb128 0x12
 1866 011e 34       		.uleb128 0x34
 1867 011f 00       		.byte	0
 1868 0120 03       		.uleb128 0x3
 1869 0121 0E       		.uleb128 0xe
 1870 0122 3A       		.uleb128 0x3a
 1871 0123 0B       		.uleb128 0xb
 1872 0124 3B       		.uleb128 0x3b
 1873 0125 05       		.uleb128 0x5
 1874 0126 49       		.uleb128 0x49
 1875 0127 13       		.uleb128 0x13
 1876 0128 02       		.uleb128 0x2
 1877 0129 18       		.uleb128 0x18
 1878 012a 00       		.byte	0
 1879 012b 00       		.byte	0
 1880 012c 13       		.uleb128 0x13
 1881 012d 34       		.uleb128 0x34
 1882 012e 00       		.byte	0
 1883 012f 03       		.uleb128 0x3
 1884 0130 0E       		.uleb128 0xe
 1885 0131 3A       		.uleb128 0x3a
 1886 0132 0B       		.uleb128 0xb
 1887 0133 3B       		.uleb128 0x3b
 1888 0134 05       		.uleb128 0x5
 1889 0135 49       		.uleb128 0x49
 1890 0136 13       		.uleb128 0x13
 1891 0137 00       		.byte	0
 1892 0138 00       		.byte	0
 1893 0139 14       		.uleb128 0x14
 1894 013a 01       		.uleb128 0x1
 1895 013b 01       		.byte	0x1
 1896 013c 49       		.uleb128 0x49
 1897 013d 13       		.uleb128 0x13
 1898 013e 01       		.uleb128 0x1
 1899 013f 13       		.uleb128 0x13
 1900 0140 00       		.byte	0
 1901 0141 00       		.byte	0
 1902 0142 15       		.uleb128 0x15
 1903 0143 21       		.uleb128 0x21
 1904 0144 00       		.byte	0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 50


 1905 0145 49       		.uleb128 0x49
 1906 0146 13       		.uleb128 0x13
 1907 0147 2F       		.uleb128 0x2f
 1908 0148 0B       		.uleb128 0xb
 1909 0149 00       		.byte	0
 1910 014a 00       		.byte	0
 1911 014b 16       		.uleb128 0x16
 1912 014c 26       		.uleb128 0x26
 1913 014d 00       		.byte	0
 1914 014e 49       		.uleb128 0x49
 1915 014f 13       		.uleb128 0x13
 1916 0150 00       		.byte	0
 1917 0151 00       		.byte	0
 1918 0152 17       		.uleb128 0x17
 1919 0153 34       		.uleb128 0x34
 1920 0154 00       		.byte	0
 1921 0155 03       		.uleb128 0x3
 1922 0156 0E       		.uleb128 0xe
 1923 0157 3A       		.uleb128 0x3a
 1924 0158 0B       		.uleb128 0xb
 1925 0159 3B       		.uleb128 0x3b
 1926 015a 0B       		.uleb128 0xb
 1927 015b 49       		.uleb128 0x49
 1928 015c 13       		.uleb128 0x13
 1929 015d 1C       		.uleb128 0x1c
 1930 015e 0A       		.uleb128 0xa
 1931 015f 00       		.byte	0
 1932 0160 00       		.byte	0
 1933 0161 18       		.uleb128 0x18
 1934 0162 34       		.uleb128 0x34
 1935 0163 00       		.byte	0
 1936 0164 03       		.uleb128 0x3
 1937 0165 0E       		.uleb128 0xe
 1938 0166 3A       		.uleb128 0x3a
 1939 0167 0B       		.uleb128 0xb
 1940 0168 3B       		.uleb128 0x3b
 1941 0169 0B       		.uleb128 0xb
 1942 016a 49       		.uleb128 0x49
 1943 016b 13       		.uleb128 0x13
 1944 016c 3F       		.uleb128 0x3f
 1945 016d 19       		.uleb128 0x19
 1946 016e 02       		.uleb128 0x2
 1947 016f 18       		.uleb128 0x18
 1948 0170 00       		.byte	0
 1949 0171 00       		.byte	0
 1950 0172 19       		.uleb128 0x19
 1951 0173 2E       		.uleb128 0x2e
 1952 0174 00       		.byte	0
 1953 0175 3F       		.uleb128 0x3f
 1954 0176 19       		.uleb128 0x19
 1955 0177 3C       		.uleb128 0x3c
 1956 0178 19       		.uleb128 0x19
 1957 0179 6E       		.uleb128 0x6e
 1958 017a 0E       		.uleb128 0xe
 1959 017b 03       		.uleb128 0x3
 1960 017c 0E       		.uleb128 0xe
 1961 017d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 51


 1962 017e 0B       		.uleb128 0xb
 1963 017f 3B       		.uleb128 0x3b
 1964 0180 0B       		.uleb128 0xb
 1965 0181 00       		.byte	0
 1966 0182 00       		.byte	0
 1967 0183 00       		.byte	0
 1968              		.section	.debug_loc,"",%progbits
 1969              	.Ldebug_loc0:
 1970              	.LLST0:
 1971 0000 70000000 		.4byte	.LVL5
 1972 0004 74000000 		.4byte	.LVL7
 1973 0008 0200     		.2byte	0x2
 1974 000a 30       		.byte	0x30
 1975 000b 9F       		.byte	0x9f
 1976 000c 74000000 		.4byte	.LVL7
 1977 0010 F4000000 		.4byte	.LFE2
 1978 0014 0100     		.2byte	0x1
 1979 0016 53       		.byte	0x53
 1980 0017 00000000 		.4byte	0
 1981 001b 00000000 		.4byte	0
 1982              	.LLST1:
 1983 001f 68000000 		.4byte	.LVL2
 1984 0023 6C000000 		.4byte	.LVL3
 1985 0027 0100     		.2byte	0x1
 1986 0029 50       		.byte	0x50
 1987 002a 6C000000 		.4byte	.LVL3
 1988 002e 6E000000 		.4byte	.LVL4
 1989 0032 0100     		.2byte	0x1
 1990 0034 52       		.byte	0x52
 1991 0035 6E000000 		.4byte	.LVL4
 1992 0039 72000000 		.4byte	.LVL6
 1993 003d 0100     		.2byte	0x1
 1994 003f 53       		.byte	0x53
 1995 0040 72000000 		.4byte	.LVL6
 1996 0044 74000000 		.4byte	.LVL7
 1997 0048 0200     		.2byte	0x2
 1998 004a 71       		.byte	0x71
 1999 004b 00       		.sleb128 0
 2000 004c 74000000 		.4byte	.LVL7
 2001 0050 8C000000 		.4byte	.LVL9
 2002 0054 0200     		.2byte	0x2
 2003 0056 30       		.byte	0x30
 2004 0057 9F       		.byte	0x9f
 2005 0058 00000000 		.4byte	0
 2006 005c 00000000 		.4byte	0
 2007              	.LLST2:
 2008 0060 7E000000 		.4byte	.LVL8
 2009 0064 8C000000 		.4byte	.LVL9
 2010 0068 0400     		.2byte	0x4
 2011 006a 0A       		.byte	0xa
 2012 006b 0010     		.2byte	0x1000
 2013 006d 9F       		.byte	0x9f
 2014 006e 00000000 		.4byte	0
 2015 0072 00000000 		.4byte	0
 2016              	.LLST3:
 2017 0076 00000000 		.4byte	.LVL13
 2018 007a 06000000 		.4byte	.LVL15
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 52


 2019 007e 0100     		.2byte	0x1
 2020 0080 50       		.byte	0x50
 2021 0081 06000000 		.4byte	.LVL15
 2022 0085 1A000000 		.4byte	.LVL17
 2023 0089 0100     		.2byte	0x1
 2024 008b 52       		.byte	0x52
 2025 008c 1A000000 		.4byte	.LVL17
 2026 0090 20000000 		.4byte	.LVL18
 2027 0094 0400     		.2byte	0x4
 2028 0096 F3       		.byte	0xf3
 2029 0097 01       		.uleb128 0x1
 2030 0098 50       		.byte	0x50
 2031 0099 9F       		.byte	0x9f
 2032 009a 20000000 		.4byte	.LVL18
 2033 009e 22000000 		.4byte	.LVL19
 2034 00a2 0100     		.2byte	0x1
 2035 00a4 50       		.byte	0x50
 2036 00a5 22000000 		.4byte	.LVL19
 2037 00a9 28000000 		.4byte	.LFE7
 2038 00ad 0400     		.2byte	0x4
 2039 00af F3       		.byte	0xf3
 2040 00b0 01       		.uleb128 0x1
 2041 00b1 50       		.byte	0x50
 2042 00b2 9F       		.byte	0x9f
 2043 00b3 00000000 		.4byte	0
 2044 00b7 00000000 		.4byte	0
 2045              	.LLST4:
 2046 00bb 02000000 		.4byte	.LVL14
 2047 00bf 06000000 		.4byte	.LVL15
 2048 00c3 0200     		.2byte	0x2
 2049 00c5 30       		.byte	0x30
 2050 00c6 9F       		.byte	0x9f
 2051 00c7 0E000000 		.4byte	.LVL16
 2052 00cb 20000000 		.4byte	.LVL18
 2053 00cf 0100     		.2byte	0x1
 2054 00d1 50       		.byte	0x50
 2055 00d2 20000000 		.4byte	.LVL18
 2056 00d6 22000000 		.4byte	.LVL19
 2057 00da 0200     		.2byte	0x2
 2058 00dc 30       		.byte	0x30
 2059 00dd 9F       		.byte	0x9f
 2060 00de 22000000 		.4byte	.LVL19
 2061 00e2 28000000 		.4byte	.LFE7
 2062 00e6 0100     		.2byte	0x1
 2063 00e8 50       		.byte	0x50
 2064 00e9 00000000 		.4byte	0
 2065 00ed 00000000 		.4byte	0
 2066              	.LLST5:
 2067 00f1 00000000 		.4byte	.LVL20
 2068 00f5 08000000 		.4byte	.LVL21
 2069 00f9 0100     		.2byte	0x1
 2070 00fb 50       		.byte	0x50
 2071 00fc 08000000 		.4byte	.LVL21
 2072 0100 12000000 		.4byte	.LVL23
 2073 0104 0100     		.2byte	0x1
 2074 0106 54       		.byte	0x54
 2075 0107 12000000 		.4byte	.LVL23
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 53


 2076 010b 20000000 		.4byte	.LVL25
 2077 010f 0400     		.2byte	0x4
 2078 0111 F3       		.byte	0xf3
 2079 0112 01       		.uleb128 0x1
 2080 0113 50       		.byte	0x50
 2081 0114 9F       		.byte	0x9f
 2082 0115 20000000 		.4byte	.LVL25
 2083 0119 22000000 		.4byte	.LVL26
 2084 011d 0100     		.2byte	0x1
 2085 011f 54       		.byte	0x54
 2086 0120 22000000 		.4byte	.LVL26
 2087 0124 2C000000 		.4byte	.LFE8
 2088 0128 0400     		.2byte	0x4
 2089 012a F3       		.byte	0xf3
 2090 012b 01       		.uleb128 0x1
 2091 012c 50       		.byte	0x50
 2092 012d 9F       		.byte	0x9f
 2093 012e 00000000 		.4byte	0
 2094 0132 00000000 		.4byte	0
 2095              	.LLST6:
 2096 0136 1E000000 		.4byte	.LVL24
 2097 013a 20000000 		.4byte	.LVL25
 2098 013e 0100     		.2byte	0x1
 2099 0140 50       		.byte	0x50
 2100 0141 22000000 		.4byte	.LVL26
 2101 0145 24000000 		.4byte	.LVL27
 2102 0149 0100     		.2byte	0x1
 2103 014b 50       		.byte	0x50
 2104 014c 00000000 		.4byte	0
 2105 0150 00000000 		.4byte	0
 2106              	.LLST7:
 2107 0154 00000000 		.4byte	.LVL28
 2108 0158 04000000 		.4byte	.LVL29
 2109 015c 0100     		.2byte	0x1
 2110 015e 50       		.byte	0x50
 2111 015f 04000000 		.4byte	.LVL29
 2112 0163 10000000 		.4byte	.LFE9
 2113 0167 0400     		.2byte	0x4
 2114 0169 F3       		.byte	0xf3
 2115 016a 01       		.uleb128 0x1
 2116 016b 50       		.byte	0x50
 2117 016c 9F       		.byte	0x9f
 2118 016d 00000000 		.4byte	0
 2119 0171 00000000 		.4byte	0
 2120              	.LLST8:
 2121 0175 00000000 		.4byte	.LVL30
 2122 0179 0E000000 		.4byte	.LVL31
 2123 017d 0100     		.2byte	0x1
 2124 017f 50       		.byte	0x50
 2125 0180 0E000000 		.4byte	.LVL31
 2126 0184 1C000000 		.4byte	.LFE10
 2127 0188 0400     		.2byte	0x4
 2128 018a F3       		.byte	0xf3
 2129 018b 01       		.uleb128 0x1
 2130 018c 50       		.byte	0x50
 2131 018d 9F       		.byte	0x9f
 2132 018e 00000000 		.4byte	0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 54


 2133 0192 00000000 		.4byte	0
 2134              	.LLST9:
 2135 0196 00000000 		.4byte	.LVL32
 2136 019a 0E000000 		.4byte	.LVL33
 2137 019e 0100     		.2byte	0x1
 2138 01a0 50       		.byte	0x50
 2139 01a1 0E000000 		.4byte	.LVL33
 2140 01a5 18000000 		.4byte	.LFE11
 2141 01a9 0400     		.2byte	0x4
 2142 01ab F3       		.byte	0xf3
 2143 01ac 01       		.uleb128 0x1
 2144 01ad 50       		.byte	0x50
 2145 01ae 9F       		.byte	0x9f
 2146 01af 00000000 		.4byte	0
 2147 01b3 00000000 		.4byte	0
 2148              	.LLST10:
 2149 01b7 00000000 		.4byte	.LVL34
 2150 01bb 04000000 		.4byte	.LVL35
 2151 01bf 0100     		.2byte	0x1
 2152 01c1 50       		.byte	0x50
 2153 01c2 04000000 		.4byte	.LVL35
 2154 01c6 10000000 		.4byte	.LFE12
 2155 01ca 0400     		.2byte	0x4
 2156 01cc F3       		.byte	0xf3
 2157 01cd 01       		.uleb128 0x1
 2158 01ce 50       		.byte	0x50
 2159 01cf 9F       		.byte	0x9f
 2160 01d0 00000000 		.4byte	0
 2161 01d4 00000000 		.4byte	0
 2162              	.LLST11:
 2163 01d8 00000000 		.4byte	.LVL36
 2164 01dc 04000000 		.4byte	.LVL37
 2165 01e0 0100     		.2byte	0x1
 2166 01e2 50       		.byte	0x50
 2167 01e3 04000000 		.4byte	.LVL37
 2168 01e7 10000000 		.4byte	.LFE13
 2169 01eb 0400     		.2byte	0x4
 2170 01ed F3       		.byte	0xf3
 2171 01ee 01       		.uleb128 0x1
 2172 01ef 50       		.byte	0x50
 2173 01f0 9F       		.byte	0x9f
 2174 01f1 00000000 		.4byte	0
 2175 01f5 00000000 		.4byte	0
 2176              	.LLST12:
 2177 01f9 00000000 		.4byte	.LVL38
 2178 01fd 0C000000 		.4byte	.LVL39
 2179 0201 0100     		.2byte	0x1
 2180 0203 50       		.byte	0x50
 2181 0204 0C000000 		.4byte	.LVL39
 2182 0208 12000000 		.4byte	.LVL41
 2183 020c 0100     		.2byte	0x1
 2184 020e 54       		.byte	0x54
 2185 020f 12000000 		.4byte	.LVL41
 2186 0213 1C000000 		.4byte	.LFE14
 2187 0217 0400     		.2byte	0x4
 2188 0219 F3       		.byte	0xf3
 2189 021a 01       		.uleb128 0x1
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 55


 2190 021b 50       		.byte	0x50
 2191 021c 9F       		.byte	0x9f
 2192 021d 00000000 		.4byte	0
 2193 0221 00000000 		.4byte	0
 2194              	.LLST13:
 2195 0225 00000000 		.4byte	.LVL38
 2196 0229 0F000000 		.4byte	.LVL40-1
 2197 022d 0100     		.2byte	0x1
 2198 022f 51       		.byte	0x51
 2199 0230 0F000000 		.4byte	.LVL40-1
 2200 0234 1C000000 		.4byte	.LFE14
 2201 0238 0400     		.2byte	0x4
 2202 023a F3       		.byte	0xf3
 2203 023b 01       		.uleb128 0x1
 2204 023c 51       		.byte	0x51
 2205 023d 9F       		.byte	0x9f
 2206 023e 00000000 		.4byte	0
 2207 0242 00000000 		.4byte	0
 2208              	.LLST14:
 2209 0246 00000000 		.4byte	.LVL42
 2210 024a 0C000000 		.4byte	.LVL43
 2211 024e 0100     		.2byte	0x1
 2212 0250 50       		.byte	0x50
 2213 0251 0C000000 		.4byte	.LVL43
 2214 0255 12000000 		.4byte	.LVL45
 2215 0259 0100     		.2byte	0x1
 2216 025b 54       		.byte	0x54
 2217 025c 12000000 		.4byte	.LVL45
 2218 0260 1C000000 		.4byte	.LFE15
 2219 0264 0400     		.2byte	0x4
 2220 0266 F3       		.byte	0xf3
 2221 0267 01       		.uleb128 0x1
 2222 0268 50       		.byte	0x50
 2223 0269 9F       		.byte	0x9f
 2224 026a 00000000 		.4byte	0
 2225 026e 00000000 		.4byte	0
 2226              	.LLST15:
 2227 0272 00000000 		.4byte	.LVL42
 2228 0276 0F000000 		.4byte	.LVL44-1
 2229 027a 0100     		.2byte	0x1
 2230 027c 51       		.byte	0x51
 2231 027d 0F000000 		.4byte	.LVL44-1
 2232 0281 16000000 		.4byte	.LVL46
 2233 0285 0100     		.2byte	0x1
 2234 0287 55       		.byte	0x55
 2235 0288 16000000 		.4byte	.LVL46
 2236 028c 1C000000 		.4byte	.LFE15
 2237 0290 0800     		.2byte	0x8
 2238 0292 F3       		.byte	0xf3
 2239 0293 01       		.uleb128 0x1
 2240 0294 50       		.byte	0x50
 2241 0295 32       		.byte	0x32
 2242 0296 24       		.byte	0x24
 2243 0297 73       		.byte	0x73
 2244 0298 00       		.sleb128 0
 2245 0299 22       		.byte	0x22
 2246 029a 00000000 		.4byte	0
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 56


 2247 029e 00000000 		.4byte	0
 2248              	.LLST16:
 2249 02a2 00000000 		.4byte	.LVL47
 2250 02a6 0C000000 		.4byte	.LVL48
 2251 02aa 0100     		.2byte	0x1
 2252 02ac 50       		.byte	0x50
 2253 02ad 0C000000 		.4byte	.LVL48
 2254 02b1 44000000 		.4byte	.LVL51
 2255 02b5 0100     		.2byte	0x1
 2256 02b7 54       		.byte	0x54
 2257 02b8 44000000 		.4byte	.LVL51
 2258 02bc 5C000000 		.4byte	.LFE16
 2259 02c0 0400     		.2byte	0x4
 2260 02c2 F3       		.byte	0xf3
 2261 02c3 01       		.uleb128 0x1
 2262 02c4 50       		.byte	0x50
 2263 02c5 9F       		.byte	0x9f
 2264 02c6 00000000 		.4byte	0
 2265 02ca 00000000 		.4byte	0
 2266              	.LLST17:
 2267 02ce 00000000 		.4byte	.LVL47
 2268 02d2 0F000000 		.4byte	.LVL49-1
 2269 02d6 0100     		.2byte	0x1
 2270 02d8 51       		.byte	0x51
 2271 02d9 0F000000 		.4byte	.LVL49-1
 2272 02dd 1C000000 		.4byte	.LVL50
 2273 02e1 0400     		.2byte	0x4
 2274 02e3 F3       		.byte	0xf3
 2275 02e4 01       		.uleb128 0x1
 2276 02e5 51       		.byte	0x51
 2277 02e6 9F       		.byte	0x9f
 2278 02e7 1C000000 		.4byte	.LVL50
 2279 02eb 48000000 		.4byte	.LVL52
 2280 02ef 0100     		.2byte	0x1
 2281 02f1 51       		.byte	0x51
 2282 02f2 00000000 		.4byte	0
 2283 02f6 00000000 		.4byte	0
 2284              	.LLST18:
 2285 02fa 00000000 		.4byte	.LVL55
 2286 02fe 0C000000 		.4byte	.LVL56
 2287 0302 0100     		.2byte	0x1
 2288 0304 50       		.byte	0x50
 2289 0305 0C000000 		.4byte	.LVL56
 2290 0309 28000000 		.4byte	.LVL60
 2291 030d 0100     		.2byte	0x1
 2292 030f 55       		.byte	0x55
 2293 0310 28000000 		.4byte	.LVL60
 2294 0314 40000000 		.4byte	.LFE17
 2295 0318 0400     		.2byte	0x4
 2296 031a F3       		.byte	0xf3
 2297 031b 01       		.uleb128 0x1
 2298 031c 50       		.byte	0x50
 2299 031d 9F       		.byte	0x9f
 2300 031e 00000000 		.4byte	0
 2301 0322 00000000 		.4byte	0
 2302              	.LLST19:
 2303 0326 00000000 		.4byte	.LVL55
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 57


 2304 032a 0F000000 		.4byte	.LVL57-1
 2305 032e 0100     		.2byte	0x1
 2306 0330 51       		.byte	0x51
 2307 0331 0F000000 		.4byte	.LVL57-1
 2308 0335 1C000000 		.4byte	.LVL58
 2309 0339 0400     		.2byte	0x4
 2310 033b F3       		.byte	0xf3
 2311 033c 01       		.uleb128 0x1
 2312 033d 51       		.byte	0x51
 2313 033e 9F       		.byte	0x9f
 2314 033f 1C000000 		.4byte	.LVL58
 2315 0343 25000000 		.4byte	.LVL59-1
 2316 0347 0100     		.2byte	0x1
 2317 0349 50       		.byte	0x50
 2318 034a 00000000 		.4byte	0
 2319 034e 00000000 		.4byte	0
 2320              	.LLST20:
 2321 0352 00000000 		.4byte	.LVL62
 2322 0356 0C000000 		.4byte	.LVL63
 2323 035a 0100     		.2byte	0x1
 2324 035c 50       		.byte	0x50
 2325 035d 0C000000 		.4byte	.LVL63
 2326 0361 2A000000 		.4byte	.LVL68
 2327 0365 0100     		.2byte	0x1
 2328 0367 54       		.byte	0x54
 2329 0368 2A000000 		.4byte	.LVL68
 2330 036c 48000000 		.4byte	.LFE18
 2331 0370 0400     		.2byte	0x4
 2332 0372 F3       		.byte	0xf3
 2333 0373 01       		.uleb128 0x1
 2334 0374 50       		.byte	0x50
 2335 0375 9F       		.byte	0x9f
 2336 0376 00000000 		.4byte	0
 2337 037a 00000000 		.4byte	0
 2338              	.LLST21:
 2339 037e 00000000 		.4byte	.LVL62
 2340 0382 0F000000 		.4byte	.LVL64-1
 2341 0386 0100     		.2byte	0x1
 2342 0388 51       		.byte	0x51
 2343 0389 0F000000 		.4byte	.LVL64-1
 2344 038d 1C000000 		.4byte	.LVL65
 2345 0391 0400     		.2byte	0x4
 2346 0393 F3       		.byte	0xf3
 2347 0394 01       		.uleb128 0x1
 2348 0395 51       		.byte	0x51
 2349 0396 9F       		.byte	0x9f
 2350 0397 1C000000 		.4byte	.LVL65
 2351 039b 1F000000 		.4byte	.LVL66-1
 2352 039f 0100     		.2byte	0x1
 2353 03a1 50       		.byte	0x50
 2354 03a2 00000000 		.4byte	0
 2355 03a6 00000000 		.4byte	0
 2356              		.section	.debug_aranges,"",%progbits
 2357 0000 A4000000 		.4byte	0xa4
 2358 0004 0200     		.2byte	0x2
 2359 0006 00000000 		.4byte	.Ldebug_info0
 2360 000a 04       		.byte	0x4
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 58


 2361 000b 00       		.byte	0
 2362 000c 0000     		.2byte	0
 2363 000e 0000     		.2byte	0
 2364 0010 00000000 		.4byte	.LFB2
 2365 0014 F4000000 		.4byte	.LFE2-.LFB2
 2366 0018 00000000 		.4byte	.LFB3
 2367 001c 30000000 		.4byte	.LFE3-.LFB3
 2368 0020 00000000 		.4byte	.LFB1
 2369 0024 20000000 		.4byte	.LFE1-.LFB1
 2370 0028 00000000 		.4byte	.LFB4
 2371 002c 10000000 		.4byte	.LFE4-.LFB4
 2372 0030 00000000 		.4byte	.LFB5
 2373 0034 14000000 		.4byte	.LFE5-.LFB5
 2374 0038 00000000 		.4byte	.LFB6
 2375 003c 14000000 		.4byte	.LFE6-.LFB6
 2376 0040 00000000 		.4byte	.LFB7
 2377 0044 28000000 		.4byte	.LFE7-.LFB7
 2378 0048 00000000 		.4byte	.LFB8
 2379 004c 2C000000 		.4byte	.LFE8-.LFB8
 2380 0050 00000000 		.4byte	.LFB9
 2381 0054 10000000 		.4byte	.LFE9-.LFB9
 2382 0058 00000000 		.4byte	.LFB10
 2383 005c 1C000000 		.4byte	.LFE10-.LFB10
 2384 0060 00000000 		.4byte	.LFB11
 2385 0064 18000000 		.4byte	.LFE11-.LFB11
 2386 0068 00000000 		.4byte	.LFB12
 2387 006c 10000000 		.4byte	.LFE12-.LFB12
 2388 0070 00000000 		.4byte	.LFB13
 2389 0074 10000000 		.4byte	.LFE13-.LFB13
 2390 0078 00000000 		.4byte	.LFB14
 2391 007c 1C000000 		.4byte	.LFE14-.LFB14
 2392 0080 00000000 		.4byte	.LFB15
 2393 0084 1C000000 		.4byte	.LFE15-.LFB15
 2394 0088 00000000 		.4byte	.LFB16
 2395 008c 5C000000 		.4byte	.LFE16-.LFB16
 2396 0090 00000000 		.4byte	.LFB17
 2397 0094 40000000 		.4byte	.LFE17-.LFB17
 2398 0098 00000000 		.4byte	.LFB18
 2399 009c 48000000 		.4byte	.LFE18-.LFB18
 2400 00a0 00000000 		.4byte	0
 2401 00a4 00000000 		.4byte	0
 2402              		.section	.debug_ranges,"",%progbits
 2403              	.Ldebug_ranges0:
 2404 0000 00000000 		.4byte	.LFB2
 2405 0004 F4000000 		.4byte	.LFE2
 2406 0008 00000000 		.4byte	.LFB3
 2407 000c 30000000 		.4byte	.LFE3
 2408 0010 00000000 		.4byte	.LFB1
 2409 0014 20000000 		.4byte	.LFE1
 2410 0018 00000000 		.4byte	.LFB4
 2411 001c 10000000 		.4byte	.LFE4
 2412 0020 00000000 		.4byte	.LFB5
 2413 0024 14000000 		.4byte	.LFE5
 2414 0028 00000000 		.4byte	.LFB6
 2415 002c 14000000 		.4byte	.LFE6
 2416 0030 00000000 		.4byte	.LFB7
 2417 0034 28000000 		.4byte	.LFE7
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 59


 2418 0038 00000000 		.4byte	.LFB8
 2419 003c 2C000000 		.4byte	.LFE8
 2420 0040 00000000 		.4byte	.LFB9
 2421 0044 10000000 		.4byte	.LFE9
 2422 0048 00000000 		.4byte	.LFB10
 2423 004c 1C000000 		.4byte	.LFE10
 2424 0050 00000000 		.4byte	.LFB11
 2425 0054 18000000 		.4byte	.LFE11
 2426 0058 00000000 		.4byte	.LFB12
 2427 005c 10000000 		.4byte	.LFE12
 2428 0060 00000000 		.4byte	.LFB13
 2429 0064 10000000 		.4byte	.LFE13
 2430 0068 00000000 		.4byte	.LFB14
 2431 006c 1C000000 		.4byte	.LFE14
 2432 0070 00000000 		.4byte	.LFB15
 2433 0074 1C000000 		.4byte	.LFE15
 2434 0078 00000000 		.4byte	.LFB16
 2435 007c 5C000000 		.4byte	.LFE16
 2436 0080 00000000 		.4byte	.LFB17
 2437 0084 40000000 		.4byte	.LFE17
 2438 0088 00000000 		.4byte	.LFB18
 2439 008c 48000000 		.4byte	.LFE18
 2440 0090 00000000 		.4byte	0
 2441 0094 00000000 		.4byte	0
 2442              		.section	.debug_line,"",%progbits
 2443              	.Ldebug_line0:
 2444 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 2444      02004B00 
 2444      00000201 
 2444      FB0E0D00 
 2444      01010101 
 2445              	.LASF10:
 2446 0000 75696E74 		.ascii	"uint16\000"
 2446      313600
 2447              	.LASF48:
 2448 0007 61646347 		.ascii	"adcGain\000"
 2448      61696E00 
 2449              	.LASF24:
 2450 000f 636F756E 		.ascii	"counts\000"
 2450      747300
 2451              	.LASF53:
 2452 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2452      436F756E 
 2452      7473546F 
 2452      5F566F6C 
 2452      747300
 2453              	.LASF25:
 2454 0029 4144435F 		.ascii	"ADC_Init\000"
 2454      496E6974 
 2454      00
 2455              	.LASF7:
 2456 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2456      206C6F6E 
 2456      6720756E 
 2456      7369676E 
 2456      65642069 
 2457              	.LASF29:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 60


 2458 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2458      53746172 
 2458      74436F6E 
 2458      76657274 
 2458      00
 2459              	.LASF6:
 2460 005a 6C6F6E67 		.ascii	"long long int\000"
 2460      206C6F6E 
 2460      6720696E 
 2460      7400
 2461              	.LASF0:
 2462 0068 7369676E 		.ascii	"signed char\000"
 2462      65642063 
 2462      68617200 
 2463              	.LASF31:
 2464 0074 73746174 		.ascii	"status\000"
 2464      757300
 2465              	.LASF13:
 2466 007b 696E7433 		.ascii	"int32\000"
 2466      3200
 2467              	.LASF27:
 2468 0081 4144435F 		.ascii	"ADC_Start\000"
 2468      53746172 
 2468      7400
 2469              	.LASF4:
 2470 008b 6C6F6E67 		.ascii	"long int\000"
 2470      20696E74 
 2470      00
 2471              	.LASF52:
 2472 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2472      436F756E 
 2472      7473546F 
 2472      5F75566F 
 2472      6C747300 
 2473              	.LASF58:
 2474 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2474      636F756E 
 2474      74735065 
 2474      72313056 
 2474      6F6C7400 
 2475              	.LASF9:
 2476 00bc 75696E74 		.ascii	"uint8\000"
 2476      3800
 2477              	.LASF61:
 2478 00c2 43794465 		.ascii	"CyDelayUs\000"
 2478      6C617955 
 2478      7300
 2479              	.LASF16:
 2480 00cc 646F7562 		.ascii	"double\000"
 2480      6C6500
 2481              	.LASF11:
 2482 00d3 75696E74 		.ascii	"uint32\000"
 2482      333200
 2483              	.LASF38:
 2484 00da 6D61736B 		.ascii	"mask\000"
 2484      00
 2485              	.LASF56:
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 61


 2486 00df 4144435F 		.ascii	"ADC_initVar\000"
 2486      696E6974 
 2486      56617200 
 2487              	.LASF34:
 2488 00eb 7265744D 		.ascii	"retMode\000"
 2488      6F646500 
 2489              	.LASF43:
 2490 00f3 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2490      5365744C 
 2490      696D6974 
 2490      4D61736B 
 2490      00
 2491              	.LASF8:
 2492 0104 756E7369 		.ascii	"unsigned int\000"
 2492      676E6564 
 2492      20696E74 
 2492      00
 2493              	.LASF66:
 2494 0111 75566F6C 		.ascii	"uVolts\000"
 2494      747300
 2495              	.LASF5:
 2496 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2496      20756E73 
 2496      69676E65 
 2496      6420696E 
 2496      7400
 2497              	.LASF44:
 2498 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 2498      53657453 
 2498      61744D61 
 2498      736B00
 2499              	.LASF54:
 2500 0139 766F6C74 		.ascii	"volts\000"
 2500      7300
 2501              	.LASF23:
 2502 013f 746D7052 		.ascii	"tmpRegVal\000"
 2502      65675661 
 2502      6C00
 2503              	.LASF3:
 2504 0149 73686F72 		.ascii	"short unsigned int\000"
 2504      7420756E 
 2504      7369676E 
 2504      65642069 
 2504      6E7400
 2505              	.LASF60:
 2506 015c 4379496E 		.ascii	"CyIntSetVector\000"
 2506      74536574 
 2506      56656374 
 2506      6F7200
 2507              	.LASF30:
 2508 016b 4144435F 		.ascii	"ADC_StopConvert\000"
 2508      53746F70 
 2508      436F6E76 
 2508      65727400 
 2509              	.LASF51:
 2510 017b 6D566F6C 		.ascii	"mVolts\000"
 2510      747300
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 62


 2511              	.LASF19:
 2512 0182 72656733 		.ascii	"reg32\000"
 2512      3200
 2513              	.LASF14:
 2514 0188 666C6F61 		.ascii	"float32\000"
 2514      74333200 
 2515              	.LASF21:
 2516 0190 73697A65 		.ascii	"sizetype\000"
 2516      74797065 
 2516      00
 2517              	.LASF40:
 2518 0199 6C6F774C 		.ascii	"lowLimit\000"
 2518      696D6974 
 2518      00
 2519              	.LASF20:
 2520 01a2 6C6F6E67 		.ascii	"long double\000"
 2520      20646F75 
 2520      626C6500 
 2521              	.LASF41:
 2522 01ae 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2522      53657448 
 2522      6967684C 
 2522      696D6974 
 2522      00
 2523              	.LASF32:
 2524 01bf 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2524      4973456E 
 2524      64436F6E 
 2524      76657273 
 2524      696F6E00 
 2525              	.LASF17:
 2526 01d3 696E7436 		.ascii	"int64\000"
 2526      3400
 2527              	.LASF59:
 2528 01d9 4379496E 		.ascii	"CyIntSetPriority\000"
 2528      74536574 
 2528      5072696F 
 2528      72697479 
 2528      00
 2529              	.LASF37:
 2530 01ea 4144435F 		.ascii	"ADC_SetChanMask\000"
 2530      53657443 
 2530      68616E4D 
 2530      61736B00 
 2531              	.LASF64:
 2532 01fa 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2532      72617465 
 2532      645F536F 
 2532      75726365 
 2532      5C50536F 
 2533              	.LASF47:
 2534 0217 4144435F 		.ascii	"ADC_SetGain\000"
 2534      53657447 
 2534      61696E00 
 2535              	.LASF15:
 2536 0223 666C6F61 		.ascii	"float\000"
 2536      7400
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 63


 2537              	.LASF42:
 2538 0229 68696768 		.ascii	"highLimit\000"
 2538      4C696D69 
 2538      7400
 2539              	.LASF49:
 2540 0233 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2540      436F756E 
 2540      7473546F 
 2540      5F6D566F 
 2540      6C747300 
 2541              	.LASF39:
 2542 0247 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2542      5365744C 
 2542      6F774C69 
 2542      6D697400 
 2543              	.LASF62:
 2544 0257 43794861 		.ascii	"CyHalt\000"
 2544      6C7400
 2545              	.LASF1:
 2546 025e 756E7369 		.ascii	"unsigned char\000"
 2546      676E6564 
 2546      20636861 
 2546      7200
 2547              	.LASF57:
 2548 026c 4144435F 		.ascii	"ADC_offset\000"
 2548      6F666673 
 2548      657400
 2549              	.LASF2:
 2550 0277 73686F72 		.ascii	"short int\000"
 2550      7420696E 
 2550      7400
 2551              	.LASF28:
 2552 0281 4144435F 		.ascii	"ADC_Stop\000"
 2552      53746F70 
 2552      00
 2553              	.LASF22:
 2554 028a 63684E75 		.ascii	"chNum\000"
 2554      6D00
 2555              	.LASF63:
 2556 0290 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2556      43313120 
 2556      352E342E 
 2556      31203230 
 2556      31363036 
 2557 02c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2557      20726576 
 2557      6973696F 
 2557      6E203233 
 2557      37373135 
 2558 02f6 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2558      67202D66 
 2558      66756E63 
 2558      74696F6E 
 2558      2D736563 
 2559              	.LASF35:
 2560 0322 6368616E 		.ascii	"chan\000"
 2560      00
ARM GAS  C:\Users\0\AppData\Local\Temp\ccww5ksr.s 			page 64


 2561              	.LASF18:
 2562 0327 63686172 		.ascii	"char\000"
 2562      00
 2563              	.LASF55:
 2564 032c 4144435F 		.ascii	"ADC_channelsConfig\000"
 2564      6368616E 
 2564      6E656C73 
 2564      436F6E66 
 2564      696700
 2565              	.LASF46:
 2566 033f 6F666673 		.ascii	"offset\000"
 2566      657400
 2567              	.LASF50:
 2568 0346 61646343 		.ascii	"adcCounts\000"
 2568      6F756E74 
 2568      7300
 2569              	.LASF26:
 2570 0350 4144435F 		.ascii	"ADC_Enable\000"
 2570      456E6162 
 2570      6C6500
 2571              	.LASF12:
 2572 035b 696E7431 		.ascii	"int16\000"
 2572      3600
 2573              	.LASF45:
 2574 0361 4144435F 		.ascii	"ADC_SetOffset\000"
 2574      5365744F 
 2574      66667365 
 2574      7400
 2575              	.LASF65:
 2576 036f 433A5C55 		.ascii	"C:\\Users\\0\\Documents\\PSoC Creator\\Workspace05\\"
 2576      73657273 
 2576      5C305C44 
 2576      6F63756D 
 2576      656E7473 
 2577 039d 52656164 		.ascii	"ReadVoltage.cydsn\000"
 2577      566F6C74 
 2577      6167652E 
 2577      63796473 
 2577      6E00
 2578              	.LASF36:
 2579 03af 72657375 		.ascii	"result\000"
 2579      6C7400
 2580              	.LASF33:
 2581 03b6 4144435F 		.ascii	"ADC_GetResult16\000"
 2581      47657452 
 2581      6573756C 
 2581      74313600 
 2582              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
